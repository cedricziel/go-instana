/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ThresholdRuleAllOf struct for ThresholdRuleAllOf
type ThresholdRuleAllOf struct {
	MetricName        *string        `json:"metricName,omitempty"`
	MetricPattern     *MetricPattern `json:"metricPattern,omitempty"`
	Rollup            *int64         `json:"rollup,omitempty"`
	Window            *int64         `json:"window,omitempty"`
	Aggregation       *string        `json:"aggregation,omitempty"`
	ConditionOperator *string        `json:"conditionOperator,omitempty"`
	ConditionValue    *float64       `json:"conditionValue,omitempty"`
}

// NewThresholdRuleAllOf instantiates a new ThresholdRuleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThresholdRuleAllOf() *ThresholdRuleAllOf {
	this := ThresholdRuleAllOf{}
	return &this
}

// NewThresholdRuleAllOfWithDefaults instantiates a new ThresholdRuleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThresholdRuleAllOfWithDefaults() *ThresholdRuleAllOf {
	this := ThresholdRuleAllOf{}
	return &this
}

// GetMetricName returns the MetricName field value if set, zero value otherwise.
func (o *ThresholdRuleAllOf) GetMetricName() string {
	if o == nil || o.MetricName == nil {
		var ret string
		return ret
	}
	return *o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleAllOf) GetMetricNameOk() (*string, bool) {
	if o == nil || o.MetricName == nil {
		return nil, false
	}
	return o.MetricName, true
}

// HasMetricName returns a boolean if a field has been set.
func (o *ThresholdRuleAllOf) HasMetricName() bool {
	if o != nil && o.MetricName != nil {
		return true
	}

	return false
}

// SetMetricName gets a reference to the given string and assigns it to the MetricName field.
func (o *ThresholdRuleAllOf) SetMetricName(v string) {
	o.MetricName = &v
}

// GetMetricPattern returns the MetricPattern field value if set, zero value otherwise.
func (o *ThresholdRuleAllOf) GetMetricPattern() MetricPattern {
	if o == nil || o.MetricPattern == nil {
		var ret MetricPattern
		return ret
	}
	return *o.MetricPattern
}

// GetMetricPatternOk returns a tuple with the MetricPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleAllOf) GetMetricPatternOk() (*MetricPattern, bool) {
	if o == nil || o.MetricPattern == nil {
		return nil, false
	}
	return o.MetricPattern, true
}

// HasMetricPattern returns a boolean if a field has been set.
func (o *ThresholdRuleAllOf) HasMetricPattern() bool {
	if o != nil && o.MetricPattern != nil {
		return true
	}

	return false
}

// SetMetricPattern gets a reference to the given MetricPattern and assigns it to the MetricPattern field.
func (o *ThresholdRuleAllOf) SetMetricPattern(v MetricPattern) {
	o.MetricPattern = &v
}

// GetRollup returns the Rollup field value if set, zero value otherwise.
func (o *ThresholdRuleAllOf) GetRollup() int64 {
	if o == nil || o.Rollup == nil {
		var ret int64
		return ret
	}
	return *o.Rollup
}

// GetRollupOk returns a tuple with the Rollup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleAllOf) GetRollupOk() (*int64, bool) {
	if o == nil || o.Rollup == nil {
		return nil, false
	}
	return o.Rollup, true
}

// HasRollup returns a boolean if a field has been set.
func (o *ThresholdRuleAllOf) HasRollup() bool {
	if o != nil && o.Rollup != nil {
		return true
	}

	return false
}

// SetRollup gets a reference to the given int64 and assigns it to the Rollup field.
func (o *ThresholdRuleAllOf) SetRollup(v int64) {
	o.Rollup = &v
}

// GetWindow returns the Window field value if set, zero value otherwise.
func (o *ThresholdRuleAllOf) GetWindow() int64 {
	if o == nil || o.Window == nil {
		var ret int64
		return ret
	}
	return *o.Window
}

// GetWindowOk returns a tuple with the Window field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleAllOf) GetWindowOk() (*int64, bool) {
	if o == nil || o.Window == nil {
		return nil, false
	}
	return o.Window, true
}

// HasWindow returns a boolean if a field has been set.
func (o *ThresholdRuleAllOf) HasWindow() bool {
	if o != nil && o.Window != nil {
		return true
	}

	return false
}

// SetWindow gets a reference to the given int64 and assigns it to the Window field.
func (o *ThresholdRuleAllOf) SetWindow(v int64) {
	o.Window = &v
}

// GetAggregation returns the Aggregation field value if set, zero value otherwise.
func (o *ThresholdRuleAllOf) GetAggregation() string {
	if o == nil || o.Aggregation == nil {
		var ret string
		return ret
	}
	return *o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleAllOf) GetAggregationOk() (*string, bool) {
	if o == nil || o.Aggregation == nil {
		return nil, false
	}
	return o.Aggregation, true
}

// HasAggregation returns a boolean if a field has been set.
func (o *ThresholdRuleAllOf) HasAggregation() bool {
	if o != nil && o.Aggregation != nil {
		return true
	}

	return false
}

// SetAggregation gets a reference to the given string and assigns it to the Aggregation field.
func (o *ThresholdRuleAllOf) SetAggregation(v string) {
	o.Aggregation = &v
}

// GetConditionOperator returns the ConditionOperator field value if set, zero value otherwise.
func (o *ThresholdRuleAllOf) GetConditionOperator() string {
	if o == nil || o.ConditionOperator == nil {
		var ret string
		return ret
	}
	return *o.ConditionOperator
}

// GetConditionOperatorOk returns a tuple with the ConditionOperator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleAllOf) GetConditionOperatorOk() (*string, bool) {
	if o == nil || o.ConditionOperator == nil {
		return nil, false
	}
	return o.ConditionOperator, true
}

// HasConditionOperator returns a boolean if a field has been set.
func (o *ThresholdRuleAllOf) HasConditionOperator() bool {
	if o != nil && o.ConditionOperator != nil {
		return true
	}

	return false
}

// SetConditionOperator gets a reference to the given string and assigns it to the ConditionOperator field.
func (o *ThresholdRuleAllOf) SetConditionOperator(v string) {
	o.ConditionOperator = &v
}

// GetConditionValue returns the ConditionValue field value if set, zero value otherwise.
func (o *ThresholdRuleAllOf) GetConditionValue() float64 {
	if o == nil || o.ConditionValue == nil {
		var ret float64
		return ret
	}
	return *o.ConditionValue
}

// GetConditionValueOk returns a tuple with the ConditionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThresholdRuleAllOf) GetConditionValueOk() (*float64, bool) {
	if o == nil || o.ConditionValue == nil {
		return nil, false
	}
	return o.ConditionValue, true
}

// HasConditionValue returns a boolean if a field has been set.
func (o *ThresholdRuleAllOf) HasConditionValue() bool {
	if o != nil && o.ConditionValue != nil {
		return true
	}

	return false
}

// SetConditionValue gets a reference to the given float64 and assigns it to the ConditionValue field.
func (o *ThresholdRuleAllOf) SetConditionValue(v float64) {
	o.ConditionValue = &v
}

func (o ThresholdRuleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MetricName != nil {
		toSerialize["metricName"] = o.MetricName
	}
	if o.MetricPattern != nil {
		toSerialize["metricPattern"] = o.MetricPattern
	}
	if o.Rollup != nil {
		toSerialize["rollup"] = o.Rollup
	}
	if o.Window != nil {
		toSerialize["window"] = o.Window
	}
	if o.Aggregation != nil {
		toSerialize["aggregation"] = o.Aggregation
	}
	if o.ConditionOperator != nil {
		toSerialize["conditionOperator"] = o.ConditionOperator
	}
	if o.ConditionValue != nil {
		toSerialize["conditionValue"] = o.ConditionValue
	}
	return json.Marshal(toSerialize)
}

type NullableThresholdRuleAllOf struct {
	value *ThresholdRuleAllOf
	isSet bool
}

func (v NullableThresholdRuleAllOf) Get() *ThresholdRuleAllOf {
	return v.value
}

func (v *NullableThresholdRuleAllOf) Set(val *ThresholdRuleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableThresholdRuleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableThresholdRuleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThresholdRuleAllOf(val *ThresholdRuleAllOf) *NullableThresholdRuleAllOf {
	return &NullableThresholdRuleAllOf{value: val, isSet: true}
}

func (v NullableThresholdRuleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThresholdRuleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
