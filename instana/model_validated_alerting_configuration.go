/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ValidatedAlertingConfiguration struct for ValidatedAlertingConfiguration
type ValidatedAlertingConfiguration struct {
	Id                          string                      `json:"id"`
	AlertName                   string                      `json:"alertName"`
	MuteUntil                   *int64                      `json:"muteUntil,omitempty"`
	IntegrationIds              []string                    `json:"integrationIds"`
	EventFilteringConfiguration EventFilteringConfiguration `json:"eventFilteringConfiguration"`
	LastUpdated                 *int64                      `json:"lastUpdated,omitempty"`
	Invalid                     *bool                       `json:"invalid,omitempty"`
	AlertChannelNames           *[]string                   `json:"alertChannelNames,omitempty"`
	ApplicationNames            *[]string                   `json:"applicationNames,omitempty"`
}

// NewValidatedAlertingConfiguration instantiates a new ValidatedAlertingConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatedAlertingConfiguration(id string, alertName string, integrationIds []string, eventFilteringConfiguration EventFilteringConfiguration) *ValidatedAlertingConfiguration {
	this := ValidatedAlertingConfiguration{}
	this.Id = id
	this.AlertName = alertName
	this.IntegrationIds = integrationIds
	this.EventFilteringConfiguration = eventFilteringConfiguration
	return &this
}

// NewValidatedAlertingConfigurationWithDefaults instantiates a new ValidatedAlertingConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatedAlertingConfigurationWithDefaults() *ValidatedAlertingConfiguration {
	this := ValidatedAlertingConfiguration{}
	return &this
}

// GetId returns the Id field value
func (o *ValidatedAlertingConfiguration) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ValidatedAlertingConfiguration) SetId(v string) {
	o.Id = v
}

// GetAlertName returns the AlertName field value
func (o *ValidatedAlertingConfiguration) GetAlertName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertName
}

// GetAlertNameOk returns a tuple with the AlertName field value
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetAlertNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertName, true
}

// SetAlertName sets field value
func (o *ValidatedAlertingConfiguration) SetAlertName(v string) {
	o.AlertName = v
}

// GetMuteUntil returns the MuteUntil field value if set, zero value otherwise.
func (o *ValidatedAlertingConfiguration) GetMuteUntil() int64 {
	if o == nil || o.MuteUntil == nil {
		var ret int64
		return ret
	}
	return *o.MuteUntil
}

// GetMuteUntilOk returns a tuple with the MuteUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetMuteUntilOk() (*int64, bool) {
	if o == nil || o.MuteUntil == nil {
		return nil, false
	}
	return o.MuteUntil, true
}

// HasMuteUntil returns a boolean if a field has been set.
func (o *ValidatedAlertingConfiguration) HasMuteUntil() bool {
	if o != nil && o.MuteUntil != nil {
		return true
	}

	return false
}

// SetMuteUntil gets a reference to the given int64 and assigns it to the MuteUntil field.
func (o *ValidatedAlertingConfiguration) SetMuteUntil(v int64) {
	o.MuteUntil = &v
}

// GetIntegrationIds returns the IntegrationIds field value
func (o *ValidatedAlertingConfiguration) GetIntegrationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IntegrationIds
}

// GetIntegrationIdsOk returns a tuple with the IntegrationIds field value
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetIntegrationIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationIds, true
}

// SetIntegrationIds sets field value
func (o *ValidatedAlertingConfiguration) SetIntegrationIds(v []string) {
	o.IntegrationIds = v
}

// GetEventFilteringConfiguration returns the EventFilteringConfiguration field value
func (o *ValidatedAlertingConfiguration) GetEventFilteringConfiguration() EventFilteringConfiguration {
	if o == nil {
		var ret EventFilteringConfiguration
		return ret
	}

	return o.EventFilteringConfiguration
}

// GetEventFilteringConfigurationOk returns a tuple with the EventFilteringConfiguration field value
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetEventFilteringConfigurationOk() (*EventFilteringConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventFilteringConfiguration, true
}

// SetEventFilteringConfiguration sets field value
func (o *ValidatedAlertingConfiguration) SetEventFilteringConfiguration(v EventFilteringConfiguration) {
	o.EventFilteringConfiguration = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ValidatedAlertingConfiguration) GetLastUpdated() int64 {
	if o == nil || o.LastUpdated == nil {
		var ret int64
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetLastUpdatedOk() (*int64, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ValidatedAlertingConfiguration) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given int64 and assigns it to the LastUpdated field.
func (o *ValidatedAlertingConfiguration) SetLastUpdated(v int64) {
	o.LastUpdated = &v
}

// GetInvalid returns the Invalid field value if set, zero value otherwise.
func (o *ValidatedAlertingConfiguration) GetInvalid() bool {
	if o == nil || o.Invalid == nil {
		var ret bool
		return ret
	}
	return *o.Invalid
}

// GetInvalidOk returns a tuple with the Invalid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetInvalidOk() (*bool, bool) {
	if o == nil || o.Invalid == nil {
		return nil, false
	}
	return o.Invalid, true
}

// HasInvalid returns a boolean if a field has been set.
func (o *ValidatedAlertingConfiguration) HasInvalid() bool {
	if o != nil && o.Invalid != nil {
		return true
	}

	return false
}

// SetInvalid gets a reference to the given bool and assigns it to the Invalid field.
func (o *ValidatedAlertingConfiguration) SetInvalid(v bool) {
	o.Invalid = &v
}

// GetAlertChannelNames returns the AlertChannelNames field value if set, zero value otherwise.
func (o *ValidatedAlertingConfiguration) GetAlertChannelNames() []string {
	if o == nil || o.AlertChannelNames == nil {
		var ret []string
		return ret
	}
	return *o.AlertChannelNames
}

// GetAlertChannelNamesOk returns a tuple with the AlertChannelNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetAlertChannelNamesOk() (*[]string, bool) {
	if o == nil || o.AlertChannelNames == nil {
		return nil, false
	}
	return o.AlertChannelNames, true
}

// HasAlertChannelNames returns a boolean if a field has been set.
func (o *ValidatedAlertingConfiguration) HasAlertChannelNames() bool {
	if o != nil && o.AlertChannelNames != nil {
		return true
	}

	return false
}

// SetAlertChannelNames gets a reference to the given []string and assigns it to the AlertChannelNames field.
func (o *ValidatedAlertingConfiguration) SetAlertChannelNames(v []string) {
	o.AlertChannelNames = &v
}

// GetApplicationNames returns the ApplicationNames field value if set, zero value otherwise.
func (o *ValidatedAlertingConfiguration) GetApplicationNames() []string {
	if o == nil || o.ApplicationNames == nil {
		var ret []string
		return ret
	}
	return *o.ApplicationNames
}

// GetApplicationNamesOk returns a tuple with the ApplicationNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingConfiguration) GetApplicationNamesOk() (*[]string, bool) {
	if o == nil || o.ApplicationNames == nil {
		return nil, false
	}
	return o.ApplicationNames, true
}

// HasApplicationNames returns a boolean if a field has been set.
func (o *ValidatedAlertingConfiguration) HasApplicationNames() bool {
	if o != nil && o.ApplicationNames != nil {
		return true
	}

	return false
}

// SetApplicationNames gets a reference to the given []string and assigns it to the ApplicationNames field.
func (o *ValidatedAlertingConfiguration) SetApplicationNames(v []string) {
	o.ApplicationNames = &v
}

func (o ValidatedAlertingConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["alertName"] = o.AlertName
	}
	if o.MuteUntil != nil {
		toSerialize["muteUntil"] = o.MuteUntil
	}
	if true {
		toSerialize["integrationIds"] = o.IntegrationIds
	}
	if true {
		toSerialize["eventFilteringConfiguration"] = o.EventFilteringConfiguration
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Invalid != nil {
		toSerialize["invalid"] = o.Invalid
	}
	if o.AlertChannelNames != nil {
		toSerialize["alertChannelNames"] = o.AlertChannelNames
	}
	if o.ApplicationNames != nil {
		toSerialize["applicationNames"] = o.ApplicationNames
	}
	return json.Marshal(toSerialize)
}

type NullableValidatedAlertingConfiguration struct {
	value *ValidatedAlertingConfiguration
	isSet bool
}

func (v NullableValidatedAlertingConfiguration) Get() *ValidatedAlertingConfiguration {
	return v.value
}

func (v *NullableValidatedAlertingConfiguration) Set(val *ValidatedAlertingConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatedAlertingConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatedAlertingConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatedAlertingConfiguration(val *ValidatedAlertingConfiguration) *NullableValidatedAlertingConfiguration {
	return &NullableValidatedAlertingConfiguration{value: val, isSet: true}
}

func (v NullableValidatedAlertingConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatedAlertingConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
