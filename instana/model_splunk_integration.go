/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SplunkIntegration struct for SplunkIntegration
type SplunkIntegration struct {
	AbstractIntegration
	Url   string `json:"url"`
	Token string `json:"token"`
}

// NewSplunkIntegration instantiates a new SplunkIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplunkIntegration(url string, token string) *SplunkIntegration {
	this := SplunkIntegration{}
	this.Url = url
	this.Token = token
	return &this
}

// NewSplunkIntegrationWithDefaults instantiates a new SplunkIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplunkIntegrationWithDefaults() *SplunkIntegration {
	this := SplunkIntegration{}
	return &this
}

// GetUrl returns the Url field value
func (o *SplunkIntegration) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SplunkIntegration) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SplunkIntegration) SetUrl(v string) {
	o.Url = v
}

// GetToken returns the Token field value
func (o *SplunkIntegration) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *SplunkIntegration) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *SplunkIntegration) SetToken(v string) {
	o.Token = v
}

func (o SplunkIntegration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedAbstractIntegration, errAbstractIntegration := json.Marshal(o.AbstractIntegration)
	if errAbstractIntegration != nil {
		return []byte{}, errAbstractIntegration
	}
	errAbstractIntegration = json.Unmarshal([]byte(serializedAbstractIntegration), &toSerialize)
	if errAbstractIntegration != nil {
		return []byte{}, errAbstractIntegration
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSplunkIntegration struct {
	value *SplunkIntegration
	isSet bool
}

func (v NullableSplunkIntegration) Get() *SplunkIntegration {
	return v.value
}

func (v *NullableSplunkIntegration) Set(val *SplunkIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableSplunkIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableSplunkIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplunkIntegration(val *SplunkIntegration) *NullableSplunkIntegration {
	return &NullableSplunkIntegration{value: val, isSet: true}
}

func (v NullableSplunkIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplunkIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
