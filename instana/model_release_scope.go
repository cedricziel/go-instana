/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ReleaseScope struct for ReleaseScope
type ReleaseScope struct {
	ServiceId       *string `json:"serviceId,omitempty"`
	ServiceName     *string `json:"serviceName,omitempty"`
	ApplicationId   *string `json:"applicationId,omitempty"`
	ApplicationName *string `json:"applicationName,omitempty"`
}

// NewReleaseScope instantiates a new ReleaseScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleaseScope() *ReleaseScope {
	this := ReleaseScope{}
	return &this
}

// NewReleaseScopeWithDefaults instantiates a new ReleaseScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleaseScopeWithDefaults() *ReleaseScope {
	this := ReleaseScope{}
	return &this
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ReleaseScope) GetServiceId() string {
	if o == nil || o.ServiceId == nil {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseScope) GetServiceIdOk() (*string, bool) {
	if o == nil || o.ServiceId == nil {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ReleaseScope) HasServiceId() bool {
	if o != nil && o.ServiceId != nil {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *ReleaseScope) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *ReleaseScope) GetServiceName() string {
	if o == nil || o.ServiceName == nil {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseScope) GetServiceNameOk() (*string, bool) {
	if o == nil || o.ServiceName == nil {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *ReleaseScope) HasServiceName() bool {
	if o != nil && o.ServiceName != nil {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *ReleaseScope) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *ReleaseScope) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseScope) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *ReleaseScope) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *ReleaseScope) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *ReleaseScope) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseScope) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *ReleaseScope) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *ReleaseScope) SetApplicationName(v string) {
	o.ApplicationName = &v
}

func (o ReleaseScope) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceId != nil {
		toSerialize["serviceId"] = o.ServiceId
	}
	if o.ServiceName != nil {
		toSerialize["serviceName"] = o.ServiceName
	}
	if o.ApplicationId != nil {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.ApplicationName != nil {
		toSerialize["applicationName"] = o.ApplicationName
	}
	return json.Marshal(toSerialize)
}

type NullableReleaseScope struct {
	value *ReleaseScope
	isSet bool
}

func (v NullableReleaseScope) Get() *ReleaseScope {
	return v.value
}

func (v *NullableReleaseScope) Set(val *ReleaseScope) {
	v.value = val
	v.isSet = true
}

func (v NullableReleaseScope) IsSet() bool {
	return v.isSet
}

func (v *NullableReleaseScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleaseScope(val *ReleaseScope) *NullableReleaseScope {
	return &NullableReleaseScope{value: val, isSet: true}
}

func (v NullableReleaseScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleaseScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
