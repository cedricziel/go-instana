/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ServiceItem struct for ServiceItem
type ServiceItem struct {
	Service Service                `json:"service"`
	Metrics map[string][][]float32 `json:"metrics"`
}

// NewServiceItem instantiates a new ServiceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceItem(service Service, metrics map[string][][]float32) *ServiceItem {
	this := ServiceItem{}
	this.Service = service
	this.Metrics = metrics
	return &this
}

// NewServiceItemWithDefaults instantiates a new ServiceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceItemWithDefaults() *ServiceItem {
	this := ServiceItem{}
	return &this
}

// GetService returns the Service field value
func (o *ServiceItem) GetService() Service {
	if o == nil {
		var ret Service
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetServiceOk() (*Service, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *ServiceItem) SetService(v Service) {
	o.Service = v
}

// GetMetrics returns the Metrics field value
func (o *ServiceItem) GetMetrics() map[string][][]float32 {
	if o == nil {
		var ret map[string][][]float32
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *ServiceItem) GetMetricsOk() (*map[string][][]float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *ServiceItem) SetMetrics(v map[string][][]float32) {
	o.Metrics = v
}

func (o ServiceItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["service"] = o.Service
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableServiceItem struct {
	value *ServiceItem
	isSet bool
}

func (v NullableServiceItem) Get() *ServiceItem {
	return v.value
}

func (v *NullableServiceItem) Set(val *ServiceItem) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceItem) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceItem(val *ServiceItem) *NullableServiceItem {
	return &NullableServiceItem{value: val, isSet: true}
}

func (v NullableServiceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
