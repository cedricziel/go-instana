/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// CursorPagination struct for CursorPagination
type CursorPagination struct {
	RetrievalSize *int32 `json:"retrievalSize,omitempty"`
	Offset        *int32 `json:"offset,omitempty"`
	IngestionTime *int64 `json:"ingestionTime,omitempty"`
}

// NewCursorPagination instantiates a new CursorPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorPagination() *CursorPagination {
	this := CursorPagination{}
	return &this
}

// NewCursorPaginationWithDefaults instantiates a new CursorPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorPaginationWithDefaults() *CursorPagination {
	this := CursorPagination{}
	return &this
}

// GetRetrievalSize returns the RetrievalSize field value if set, zero value otherwise.
func (o *CursorPagination) GetRetrievalSize() int32 {
	if o == nil || o.RetrievalSize == nil {
		var ret int32
		return ret
	}
	return *o.RetrievalSize
}

// GetRetrievalSizeOk returns a tuple with the RetrievalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPagination) GetRetrievalSizeOk() (*int32, bool) {
	if o == nil || o.RetrievalSize == nil {
		return nil, false
	}
	return o.RetrievalSize, true
}

// HasRetrievalSize returns a boolean if a field has been set.
func (o *CursorPagination) HasRetrievalSize() bool {
	if o != nil && o.RetrievalSize != nil {
		return true
	}

	return false
}

// SetRetrievalSize gets a reference to the given int32 and assigns it to the RetrievalSize field.
func (o *CursorPagination) SetRetrievalSize(v int32) {
	o.RetrievalSize = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *CursorPagination) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPagination) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *CursorPagination) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *CursorPagination) SetOffset(v int32) {
	o.Offset = &v
}

// GetIngestionTime returns the IngestionTime field value if set, zero value otherwise.
func (o *CursorPagination) GetIngestionTime() int64 {
	if o == nil || o.IngestionTime == nil {
		var ret int64
		return ret
	}
	return *o.IngestionTime
}

// GetIngestionTimeOk returns a tuple with the IngestionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPagination) GetIngestionTimeOk() (*int64, bool) {
	if o == nil || o.IngestionTime == nil {
		return nil, false
	}
	return o.IngestionTime, true
}

// HasIngestionTime returns a boolean if a field has been set.
func (o *CursorPagination) HasIngestionTime() bool {
	if o != nil && o.IngestionTime != nil {
		return true
	}

	return false
}

// SetIngestionTime gets a reference to the given int64 and assigns it to the IngestionTime field.
func (o *CursorPagination) SetIngestionTime(v int64) {
	o.IngestionTime = &v
}

func (o CursorPagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RetrievalSize != nil {
		toSerialize["retrievalSize"] = o.RetrievalSize
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.IngestionTime != nil {
		toSerialize["ingestionTime"] = o.IngestionTime
	}
	return json.Marshal(toSerialize)
}

type NullableCursorPagination struct {
	value *CursorPagination
	isSet bool
}

func (v NullableCursorPagination) Get() *CursorPagination {
	return v.value
}

func (v *NullableCursorPagination) Set(val *CursorPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorPagination(val *CursorPagination) *NullableCursorPagination {
	return &NullableCursorPagination{value: val, isSet: true}
}

func (v NullableCursorPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
