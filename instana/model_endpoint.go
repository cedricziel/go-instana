/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// Endpoint struct for Endpoint
type Endpoint struct {
	Id            string   `json:"id"`
	Label         string   `json:"label"`
	Type          string   `json:"type"`
	ServiceId     string   `json:"serviceId"`
	Technologies  []string `json:"technologies"`
	IsSynthetic   *bool    `json:"isSynthetic,omitempty"`
	SyntheticType *string  `json:"syntheticType,omitempty"`
	Synthetic     *bool    `json:"synthetic,omitempty"`
	EntityType    *string  `json:"entityType,omitempty"`
}

// NewEndpoint instantiates a new Endpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpoint(id string, label string, type_ string, serviceId string, technologies []string) *Endpoint {
	this := Endpoint{}
	this.Id = id
	this.Label = label
	this.Type = type_
	this.ServiceId = serviceId
	this.Technologies = technologies
	return &this
}

// NewEndpointWithDefaults instantiates a new Endpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointWithDefaults() *Endpoint {
	this := Endpoint{}
	return &this
}

// GetId returns the Id field value
func (o *Endpoint) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Endpoint) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *Endpoint) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *Endpoint) SetLabel(v string) {
	o.Label = v
}

// GetType returns the Type field value
func (o *Endpoint) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Endpoint) SetType(v string) {
	o.Type = v
}

// GetServiceId returns the ServiceId field value
func (o *Endpoint) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *Endpoint) SetServiceId(v string) {
	o.ServiceId = v
}

// GetTechnologies returns the Technologies field value
func (o *Endpoint) GetTechnologies() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Technologies
}

// GetTechnologiesOk returns a tuple with the Technologies field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetTechnologiesOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Technologies, true
}

// SetTechnologies sets field value
func (o *Endpoint) SetTechnologies(v []string) {
	o.Technologies = v
}

// GetIsSynthetic returns the IsSynthetic field value if set, zero value otherwise.
func (o *Endpoint) GetIsSynthetic() bool {
	if o == nil || o.IsSynthetic == nil {
		var ret bool
		return ret
	}
	return *o.IsSynthetic
}

// GetIsSyntheticOk returns a tuple with the IsSynthetic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetIsSyntheticOk() (*bool, bool) {
	if o == nil || o.IsSynthetic == nil {
		return nil, false
	}
	return o.IsSynthetic, true
}

// HasIsSynthetic returns a boolean if a field has been set.
func (o *Endpoint) HasIsSynthetic() bool {
	if o != nil && o.IsSynthetic != nil {
		return true
	}

	return false
}

// SetIsSynthetic gets a reference to the given bool and assigns it to the IsSynthetic field.
func (o *Endpoint) SetIsSynthetic(v bool) {
	o.IsSynthetic = &v
}

// GetSyntheticType returns the SyntheticType field value if set, zero value otherwise.
func (o *Endpoint) GetSyntheticType() string {
	if o == nil || o.SyntheticType == nil {
		var ret string
		return ret
	}
	return *o.SyntheticType
}

// GetSyntheticTypeOk returns a tuple with the SyntheticType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetSyntheticTypeOk() (*string, bool) {
	if o == nil || o.SyntheticType == nil {
		return nil, false
	}
	return o.SyntheticType, true
}

// HasSyntheticType returns a boolean if a field has been set.
func (o *Endpoint) HasSyntheticType() bool {
	if o != nil && o.SyntheticType != nil {
		return true
	}

	return false
}

// SetSyntheticType gets a reference to the given string and assigns it to the SyntheticType field.
func (o *Endpoint) SetSyntheticType(v string) {
	o.SyntheticType = &v
}

// GetSynthetic returns the Synthetic field value if set, zero value otherwise.
func (o *Endpoint) GetSynthetic() bool {
	if o == nil || o.Synthetic == nil {
		var ret bool
		return ret
	}
	return *o.Synthetic
}

// GetSyntheticOk returns a tuple with the Synthetic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetSyntheticOk() (*bool, bool) {
	if o == nil || o.Synthetic == nil {
		return nil, false
	}
	return o.Synthetic, true
}

// HasSynthetic returns a boolean if a field has been set.
func (o *Endpoint) HasSynthetic() bool {
	if o != nil && o.Synthetic != nil {
		return true
	}

	return false
}

// SetSynthetic gets a reference to the given bool and assigns it to the Synthetic field.
func (o *Endpoint) SetSynthetic(v bool) {
	o.Synthetic = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *Endpoint) GetEntityType() string {
	if o == nil || o.EntityType == nil {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetEntityTypeOk() (*string, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *Endpoint) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *Endpoint) SetEntityType(v string) {
	o.EntityType = &v
}

func (o Endpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["serviceId"] = o.ServiceId
	}
	if true {
		toSerialize["technologies"] = o.Technologies
	}
	if o.IsSynthetic != nil {
		toSerialize["isSynthetic"] = o.IsSynthetic
	}
	if o.SyntheticType != nil {
		toSerialize["syntheticType"] = o.SyntheticType
	}
	if o.Synthetic != nil {
		toSerialize["synthetic"] = o.Synthetic
	}
	if o.EntityType != nil {
		toSerialize["entityType"] = o.EntityType
	}
	return json.Marshal(toSerialize)
}

type NullableEndpoint struct {
	value *Endpoint
	isSet bool
}

func (v NullableEndpoint) Get() *Endpoint {
	return v.value
}

func (v *NullableEndpoint) Set(val *Endpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpoint(val *Endpoint) *NullableEndpoint {
	return &NullableEndpoint{value: val, isSet: true}
}

func (v NullableEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
