/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// TagTreeTag struct for TagTreeTag
type TagTreeTag struct {
	TagTreeNode
	Description *string `json:"description,omitempty"`
	TagName     string  `json:"tagName"`
}

// NewTagTreeTag instantiates a new TagTreeTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagTreeTag(tagName string) *TagTreeTag {
	this := TagTreeTag{}
	this.TagName = tagName
	return &this
}

// NewTagTreeTagWithDefaults instantiates a new TagTreeTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagTreeTagWithDefaults() *TagTreeTag {
	this := TagTreeTag{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TagTreeTag) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagTreeTag) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TagTreeTag) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TagTreeTag) SetDescription(v string) {
	o.Description = &v
}

// GetTagName returns the TagName field value
func (o *TagTreeTag) GetTagName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value
// and a boolean to check if the value has been set.
func (o *TagTreeTag) GetTagNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagName, true
}

// SetTagName sets field value
func (o *TagTreeTag) SetTagName(v string) {
	o.TagName = v
}

func (o TagTreeTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedTagTreeNode, errTagTreeNode := json.Marshal(o.TagTreeNode)
	if errTagTreeNode != nil {
		return []byte{}, errTagTreeNode
	}
	errTagTreeNode = json.Unmarshal([]byte(serializedTagTreeNode), &toSerialize)
	if errTagTreeNode != nil {
		return []byte{}, errTagTreeNode
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["tagName"] = o.TagName
	}
	return json.Marshal(toSerialize)
}

type NullableTagTreeTag struct {
	value *TagTreeTag
	isSet bool
}

func (v NullableTagTreeTag) Get() *TagTreeTag {
	return v.value
}

func (v *NullableTagTreeTag) Set(val *TagTreeTag) {
	v.value = val
	v.isSet = true
}

func (v NullableTagTreeTag) IsSet() bool {
	return v.isSet
}

func (v *NullableTagTreeTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagTreeTag(val *TagTreeTag) *NullableTagTreeTag {
	return &NullableTagTreeTag{value: val, isSet: true}
}

func (v NullableTagTreeTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagTreeTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
