/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// PluginResult struct for PluginResult
type PluginResult struct {
	Plugin *string `json:"plugin,omitempty"`
	Label  *string `json:"label,omitempty"`
}

// NewPluginResult instantiates a new PluginResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginResult() *PluginResult {
	this := PluginResult{}
	return &this
}

// NewPluginResultWithDefaults instantiates a new PluginResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginResultWithDefaults() *PluginResult {
	this := PluginResult{}
	return &this
}

// GetPlugin returns the Plugin field value if set, zero value otherwise.
func (o *PluginResult) GetPlugin() string {
	if o == nil || o.Plugin == nil {
		var ret string
		return ret
	}
	return *o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginResult) GetPluginOk() (*string, bool) {
	if o == nil || o.Plugin == nil {
		return nil, false
	}
	return o.Plugin, true
}

// HasPlugin returns a boolean if a field has been set.
func (o *PluginResult) HasPlugin() bool {
	if o != nil && o.Plugin != nil {
		return true
	}

	return false
}

// SetPlugin gets a reference to the given string and assigns it to the Plugin field.
func (o *PluginResult) SetPlugin(v string) {
	o.Plugin = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PluginResult) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginResult) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PluginResult) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PluginResult) SetLabel(v string) {
	o.Label = &v
}

func (o PluginResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Plugin != nil {
		toSerialize["plugin"] = o.Plugin
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	return json.Marshal(toSerialize)
}

type NullablePluginResult struct {
	value *PluginResult
	isSet bool
}

func (v NullablePluginResult) Get() *PluginResult {
	return v.value
}

func (v *NullablePluginResult) Set(val *PluginResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginResult(val *PluginResult) *NullablePluginResult {
	return &NullablePluginResult{value: val, isSet: true}
}

func (v NullablePluginResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
