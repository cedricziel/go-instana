/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ApplicationItem struct for ApplicationItem
type ApplicationItem struct {
	Application Application            `json:"application"`
	Metrics     map[string][][]float32 `json:"metrics"`
}

// NewApplicationItem instantiates a new ApplicationItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationItem(application Application, metrics map[string][][]float32) *ApplicationItem {
	this := ApplicationItem{}
	this.Application = application
	this.Metrics = metrics
	return &this
}

// NewApplicationItemWithDefaults instantiates a new ApplicationItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationItemWithDefaults() *ApplicationItem {
	this := ApplicationItem{}
	return &this
}

// GetApplication returns the Application field value
func (o *ApplicationItem) GetApplication() Application {
	if o == nil {
		var ret Application
		return ret
	}

	return o.Application
}

// GetApplicationOk returns a tuple with the Application field value
// and a boolean to check if the value has been set.
func (o *ApplicationItem) GetApplicationOk() (*Application, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Application, true
}

// SetApplication sets field value
func (o *ApplicationItem) SetApplication(v Application) {
	o.Application = v
}

// GetMetrics returns the Metrics field value
func (o *ApplicationItem) GetMetrics() map[string][][]float32 {
	if o == nil {
		var ret map[string][][]float32
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *ApplicationItem) GetMetricsOk() (*map[string][][]float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *ApplicationItem) SetMetrics(v map[string][][]float32) {
	o.Metrics = v
}

func (o ApplicationItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["application"] = o.Application
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationItem struct {
	value *ApplicationItem
	isSet bool
}

func (v NullableApplicationItem) Get() *ApplicationItem {
	return v.value
}

func (v *NullableApplicationItem) Set(val *ApplicationItem) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationItem) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationItem(val *ApplicationItem) *NullableApplicationItem {
	return &NullableApplicationItem{value: val, isSet: true}
}

func (v NullableApplicationItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
