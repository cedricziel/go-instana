/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// LogEntryActor struct for LogEntryActor
type LogEntryActor struct {
	Type  string  `json:"type"`
	Id    string  `json:"id"`
	Name  string  `json:"name"`
	Email *string `json:"email,omitempty"`
}

// NewLogEntryActor instantiates a new LogEntryActor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogEntryActor(type_ string, id string, name string) *LogEntryActor {
	this := LogEntryActor{}
	this.Type = type_
	this.Id = id
	this.Name = name
	return &this
}

// NewLogEntryActorWithDefaults instantiates a new LogEntryActor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogEntryActorWithDefaults() *LogEntryActor {
	this := LogEntryActor{}
	return &this
}

// GetType returns the Type field value
func (o *LogEntryActor) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LogEntryActor) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LogEntryActor) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *LogEntryActor) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LogEntryActor) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LogEntryActor) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *LogEntryActor) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogEntryActor) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogEntryActor) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *LogEntryActor) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogEntryActor) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *LogEntryActor) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *LogEntryActor) SetEmail(v string) {
	o.Email = &v
}

func (o LogEntryActor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableLogEntryActor struct {
	value *LogEntryActor
	isSet bool
}

func (v NullableLogEntryActor) Get() *LogEntryActor {
	return v.value
}

func (v *NullableLogEntryActor) Set(val *LogEntryActor) {
	v.value = val
	v.isSet = true
}

func (v NullableLogEntryActor) IsSet() bool {
	return v.isSet
}

func (v *NullableLogEntryActor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogEntryActor(val *LogEntryActor) *NullableLogEntryActor {
	return &NullableLogEntryActor{value: val, isSet: true}
}

func (v NullableLogEntryActor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogEntryActor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
