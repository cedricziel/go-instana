/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// WebsiteAlertConfigWithMetadata struct for WebsiteAlertConfigWithMetadata
type WebsiteAlertConfigWithMetadata struct {
	Name            string               `json:"name"`
	Description     string               `json:"description"`
	WebsiteId       string               `json:"websiteId"`
	Severity        *int32               `json:"severity,omitempty"`
	Triggering      *bool                `json:"triggering,omitempty"`
	TagFilters      []TagFilter          `json:"tagFilters"`
	Rule            WebsiteAlertRule     `json:"rule"`
	Baseline        *HistoricBaseline    `json:"baseline,omitempty"`
	AlertChannelIds []string             `json:"alertChannelIds"`
	Granularity     *int32               `json:"granularity,omitempty"`
	TimeThreshold   WebsiteTimeThreshold `json:"timeThreshold"`
	Id              string               `json:"id"`
	Created         *int64               `json:"created,omitempty"`
	ReadOnly        *bool                `json:"readOnly,omitempty"`
	Enabled         *bool                `json:"enabled,omitempty"`
	Threshold       Threshold            `json:"threshold"`
}

// NewWebsiteAlertConfigWithMetadata instantiates a new WebsiteAlertConfigWithMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteAlertConfigWithMetadata(name string, description string, websiteId string, tagFilters []TagFilter, rule WebsiteAlertRule, alertChannelIds []string, timeThreshold WebsiteTimeThreshold, id string, threshold Threshold) *WebsiteAlertConfigWithMetadata {
	this := WebsiteAlertConfigWithMetadata{}
	this.Name = name
	this.Description = description
	this.WebsiteId = websiteId
	this.TagFilters = tagFilters
	this.Rule = rule
	this.AlertChannelIds = alertChannelIds
	var granularity int32 = 600000
	this.Granularity = &granularity
	this.TimeThreshold = timeThreshold
	this.Id = id
	this.Threshold = threshold
	return &this
}

// NewWebsiteAlertConfigWithMetadataWithDefaults instantiates a new WebsiteAlertConfigWithMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteAlertConfigWithMetadataWithDefaults() *WebsiteAlertConfigWithMetadata {
	this := WebsiteAlertConfigWithMetadata{}
	var granularity int32 = 600000
	this.Granularity = &granularity
	return &this
}

// GetName returns the Name field value
func (o *WebsiteAlertConfigWithMetadata) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebsiteAlertConfigWithMetadata) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *WebsiteAlertConfigWithMetadata) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *WebsiteAlertConfigWithMetadata) SetDescription(v string) {
	o.Description = v
}

// GetWebsiteId returns the WebsiteId field value
func (o *WebsiteAlertConfigWithMetadata) GetWebsiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebsiteId
}

// GetWebsiteIdOk returns a tuple with the WebsiteId field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetWebsiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebsiteId, true
}

// SetWebsiteId sets field value
func (o *WebsiteAlertConfigWithMetadata) SetWebsiteId(v string) {
	o.WebsiteId = v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *WebsiteAlertConfigWithMetadata) GetSeverity() int32 {
	if o == nil || o.Severity == nil {
		var ret int32
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetSeverityOk() (*int32, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *WebsiteAlertConfigWithMetadata) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given int32 and assigns it to the Severity field.
func (o *WebsiteAlertConfigWithMetadata) SetSeverity(v int32) {
	o.Severity = &v
}

// GetTriggering returns the Triggering field value if set, zero value otherwise.
func (o *WebsiteAlertConfigWithMetadata) GetTriggering() bool {
	if o == nil || o.Triggering == nil {
		var ret bool
		return ret
	}
	return *o.Triggering
}

// GetTriggeringOk returns a tuple with the Triggering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetTriggeringOk() (*bool, bool) {
	if o == nil || o.Triggering == nil {
		return nil, false
	}
	return o.Triggering, true
}

// HasTriggering returns a boolean if a field has been set.
func (o *WebsiteAlertConfigWithMetadata) HasTriggering() bool {
	if o != nil && o.Triggering != nil {
		return true
	}

	return false
}

// SetTriggering gets a reference to the given bool and assigns it to the Triggering field.
func (o *WebsiteAlertConfigWithMetadata) SetTriggering(v bool) {
	o.Triggering = &v
}

// GetTagFilters returns the TagFilters field value
func (o *WebsiteAlertConfigWithMetadata) GetTagFilters() []TagFilter {
	if o == nil {
		var ret []TagFilter
		return ret
	}

	return o.TagFilters
}

// GetTagFiltersOk returns a tuple with the TagFilters field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetTagFiltersOk() (*[]TagFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagFilters, true
}

// SetTagFilters sets field value
func (o *WebsiteAlertConfigWithMetadata) SetTagFilters(v []TagFilter) {
	o.TagFilters = v
}

// GetRule returns the Rule field value
func (o *WebsiteAlertConfigWithMetadata) GetRule() WebsiteAlertRule {
	if o == nil {
		var ret WebsiteAlertRule
		return ret
	}

	return o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetRuleOk() (*WebsiteAlertRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rule, true
}

// SetRule sets field value
func (o *WebsiteAlertConfigWithMetadata) SetRule(v WebsiteAlertRule) {
	o.Rule = v
}

// GetBaseline returns the Baseline field value if set, zero value otherwise.
func (o *WebsiteAlertConfigWithMetadata) GetBaseline() HistoricBaseline {
	if o == nil || o.Baseline == nil {
		var ret HistoricBaseline
		return ret
	}
	return *o.Baseline
}

// GetBaselineOk returns a tuple with the Baseline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetBaselineOk() (*HistoricBaseline, bool) {
	if o == nil || o.Baseline == nil {
		return nil, false
	}
	return o.Baseline, true
}

// HasBaseline returns a boolean if a field has been set.
func (o *WebsiteAlertConfigWithMetadata) HasBaseline() bool {
	if o != nil && o.Baseline != nil {
		return true
	}

	return false
}

// SetBaseline gets a reference to the given HistoricBaseline and assigns it to the Baseline field.
func (o *WebsiteAlertConfigWithMetadata) SetBaseline(v HistoricBaseline) {
	o.Baseline = &v
}

// GetAlertChannelIds returns the AlertChannelIds field value
func (o *WebsiteAlertConfigWithMetadata) GetAlertChannelIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AlertChannelIds
}

// GetAlertChannelIdsOk returns a tuple with the AlertChannelIds field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetAlertChannelIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertChannelIds, true
}

// SetAlertChannelIds sets field value
func (o *WebsiteAlertConfigWithMetadata) SetAlertChannelIds(v []string) {
	o.AlertChannelIds = v
}

// GetGranularity returns the Granularity field value if set, zero value otherwise.
func (o *WebsiteAlertConfigWithMetadata) GetGranularity() int32 {
	if o == nil || o.Granularity == nil {
		var ret int32
		return ret
	}
	return *o.Granularity
}

// GetGranularityOk returns a tuple with the Granularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetGranularityOk() (*int32, bool) {
	if o == nil || o.Granularity == nil {
		return nil, false
	}
	return o.Granularity, true
}

// HasGranularity returns a boolean if a field has been set.
func (o *WebsiteAlertConfigWithMetadata) HasGranularity() bool {
	if o != nil && o.Granularity != nil {
		return true
	}

	return false
}

// SetGranularity gets a reference to the given int32 and assigns it to the Granularity field.
func (o *WebsiteAlertConfigWithMetadata) SetGranularity(v int32) {
	o.Granularity = &v
}

// GetTimeThreshold returns the TimeThreshold field value
func (o *WebsiteAlertConfigWithMetadata) GetTimeThreshold() WebsiteTimeThreshold {
	if o == nil {
		var ret WebsiteTimeThreshold
		return ret
	}

	return o.TimeThreshold
}

// GetTimeThresholdOk returns a tuple with the TimeThreshold field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetTimeThresholdOk() (*WebsiteTimeThreshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeThreshold, true
}

// SetTimeThreshold sets field value
func (o *WebsiteAlertConfigWithMetadata) SetTimeThreshold(v WebsiteTimeThreshold) {
	o.TimeThreshold = v
}

// GetId returns the Id field value
func (o *WebsiteAlertConfigWithMetadata) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebsiteAlertConfigWithMetadata) SetId(v string) {
	o.Id = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WebsiteAlertConfigWithMetadata) GetCreated() int64 {
	if o == nil || o.Created == nil {
		var ret int64
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetCreatedOk() (*int64, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WebsiteAlertConfigWithMetadata) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int64 and assigns it to the Created field.
func (o *WebsiteAlertConfigWithMetadata) SetCreated(v int64) {
	o.Created = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *WebsiteAlertConfigWithMetadata) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *WebsiteAlertConfigWithMetadata) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *WebsiteAlertConfigWithMetadata) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *WebsiteAlertConfigWithMetadata) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *WebsiteAlertConfigWithMetadata) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *WebsiteAlertConfigWithMetadata) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetThreshold returns the Threshold field value
func (o *WebsiteAlertConfigWithMetadata) GetThreshold() Threshold {
	if o == nil {
		var ret Threshold
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertConfigWithMetadata) GetThresholdOk() (*Threshold, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *WebsiteAlertConfigWithMetadata) SetThreshold(v Threshold) {
	o.Threshold = v
}

func (o WebsiteAlertConfigWithMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["websiteId"] = o.WebsiteId
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Triggering != nil {
		toSerialize["triggering"] = o.Triggering
	}
	if true {
		toSerialize["tagFilters"] = o.TagFilters
	}
	if true {
		toSerialize["rule"] = o.Rule
	}
	if o.Baseline != nil {
		toSerialize["baseline"] = o.Baseline
	}
	if true {
		toSerialize["alertChannelIds"] = o.AlertChannelIds
	}
	if o.Granularity != nil {
		toSerialize["granularity"] = o.Granularity
	}
	if true {
		toSerialize["timeThreshold"] = o.TimeThreshold
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.ReadOnly != nil {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["threshold"] = o.Threshold
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteAlertConfigWithMetadata struct {
	value *WebsiteAlertConfigWithMetadata
	isSet bool
}

func (v NullableWebsiteAlertConfigWithMetadata) Get() *WebsiteAlertConfigWithMetadata {
	return v.value
}

func (v *NullableWebsiteAlertConfigWithMetadata) Set(val *WebsiteAlertConfigWithMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteAlertConfigWithMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteAlertConfigWithMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteAlertConfigWithMetadata(val *WebsiteAlertConfigWithMetadata) *NullableWebsiteAlertConfigWithMetadata {
	return &NullableWebsiteAlertConfigWithMetadata{value: val, isSet: true}
}

func (v NullableWebsiteAlertConfigWithMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteAlertConfigWithMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
