/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// WebsiteAlertRule struct for WebsiteAlertRule
type WebsiteAlertRule struct {
	AlertType  string `json:"alertType"`
	MetricName string `json:"metricName"`
}

// NewWebsiteAlertRule instantiates a new WebsiteAlertRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteAlertRule(alertType string, metricName string) *WebsiteAlertRule {
	this := WebsiteAlertRule{}
	this.AlertType = alertType
	this.MetricName = metricName
	return &this
}

// NewWebsiteAlertRuleWithDefaults instantiates a new WebsiteAlertRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteAlertRuleWithDefaults() *WebsiteAlertRule {
	this := WebsiteAlertRule{}
	return &this
}

// GetAlertType returns the AlertType field value
func (o *WebsiteAlertRule) GetAlertType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertRule) GetAlertTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertType, true
}

// SetAlertType sets field value
func (o *WebsiteAlertRule) SetAlertType(v string) {
	o.AlertType = v
}

// GetMetricName returns the MetricName field value
func (o *WebsiteAlertRule) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *WebsiteAlertRule) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *WebsiteAlertRule) SetMetricName(v string) {
	o.MetricName = v
}

func (o WebsiteAlertRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["alertType"] = o.AlertType
	}
	if true {
		toSerialize["metricName"] = o.MetricName
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteAlertRule struct {
	value *WebsiteAlertRule
	isSet bool
}

func (v NullableWebsiteAlertRule) Get() *WebsiteAlertRule {
	return v.value
}

func (v *NullableWebsiteAlertRule) Set(val *WebsiteAlertRule) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteAlertRule) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteAlertRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteAlertRule(val *WebsiteAlertRule) *NullableWebsiteAlertRule {
	return &NullableWebsiteAlertRule{value: val, isSet: true}
}

func (v NullableWebsiteAlertRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteAlertRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
