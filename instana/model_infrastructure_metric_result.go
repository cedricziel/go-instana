/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// InfrastructureMetricResult struct for InfrastructureMetricResult
type InfrastructureMetricResult struct {
	Items *[]MetricItem `json:"items,omitempty"`
}

// NewInfrastructureMetricResult instantiates a new InfrastructureMetricResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfrastructureMetricResult() *InfrastructureMetricResult {
	this := InfrastructureMetricResult{}
	return &this
}

// NewInfrastructureMetricResultWithDefaults instantiates a new InfrastructureMetricResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfrastructureMetricResultWithDefaults() *InfrastructureMetricResult {
	this := InfrastructureMetricResult{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *InfrastructureMetricResult) GetItems() []MetricItem {
	if o == nil || o.Items == nil {
		var ret []MetricItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfrastructureMetricResult) GetItemsOk() (*[]MetricItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *InfrastructureMetricResult) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MetricItem and assigns it to the Items field.
func (o *InfrastructureMetricResult) SetItems(v []MetricItem) {
	o.Items = &v
}

func (o InfrastructureMetricResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableInfrastructureMetricResult struct {
	value *InfrastructureMetricResult
	isSet bool
}

func (v NullableInfrastructureMetricResult) Get() *InfrastructureMetricResult {
	return v.value
}

func (v *NullableInfrastructureMetricResult) Set(val *InfrastructureMetricResult) {
	v.value = val
	v.isSet = true
}

func (v NullableInfrastructureMetricResult) IsSet() bool {
	return v.isSet
}

func (v *NullableInfrastructureMetricResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfrastructureMetricResult(val *InfrastructureMetricResult) *NullableInfrastructureMetricResult {
	return &NullableInfrastructureMetricResult{value: val, isSet: true}
}

func (v NullableInfrastructureMetricResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfrastructureMetricResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
