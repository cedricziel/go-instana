/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// KubernetesPhysicalContext struct for KubernetesPhysicalContext
type KubernetesPhysicalContext struct {
	Pod       *SnapshotPreview `json:"pod,omitempty"`
	Namespace *SnapshotPreview `json:"namespace,omitempty"`
	Node      *SnapshotPreview `json:"node,omitempty"`
	Cluster   *SnapshotPreview `json:"cluster,omitempty"`
}

// NewKubernetesPhysicalContext instantiates a new KubernetesPhysicalContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesPhysicalContext() *KubernetesPhysicalContext {
	this := KubernetesPhysicalContext{}
	return &this
}

// NewKubernetesPhysicalContextWithDefaults instantiates a new KubernetesPhysicalContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesPhysicalContextWithDefaults() *KubernetesPhysicalContext {
	this := KubernetesPhysicalContext{}
	return &this
}

// GetPod returns the Pod field value if set, zero value otherwise.
func (o *KubernetesPhysicalContext) GetPod() SnapshotPreview {
	if o == nil || o.Pod == nil {
		var ret SnapshotPreview
		return ret
	}
	return *o.Pod
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPhysicalContext) GetPodOk() (*SnapshotPreview, bool) {
	if o == nil || o.Pod == nil {
		return nil, false
	}
	return o.Pod, true
}

// HasPod returns a boolean if a field has been set.
func (o *KubernetesPhysicalContext) HasPod() bool {
	if o != nil && o.Pod != nil {
		return true
	}

	return false
}

// SetPod gets a reference to the given SnapshotPreview and assigns it to the Pod field.
func (o *KubernetesPhysicalContext) SetPod(v SnapshotPreview) {
	o.Pod = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *KubernetesPhysicalContext) GetNamespace() SnapshotPreview {
	if o == nil || o.Namespace == nil {
		var ret SnapshotPreview
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPhysicalContext) GetNamespaceOk() (*SnapshotPreview, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *KubernetesPhysicalContext) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given SnapshotPreview and assigns it to the Namespace field.
func (o *KubernetesPhysicalContext) SetNamespace(v SnapshotPreview) {
	o.Namespace = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *KubernetesPhysicalContext) GetNode() SnapshotPreview {
	if o == nil || o.Node == nil {
		var ret SnapshotPreview
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPhysicalContext) GetNodeOk() (*SnapshotPreview, bool) {
	if o == nil || o.Node == nil {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *KubernetesPhysicalContext) HasNode() bool {
	if o != nil && o.Node != nil {
		return true
	}

	return false
}

// SetNode gets a reference to the given SnapshotPreview and assigns it to the Node field.
func (o *KubernetesPhysicalContext) SetNode(v SnapshotPreview) {
	o.Node = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *KubernetesPhysicalContext) GetCluster() SnapshotPreview {
	if o == nil || o.Cluster == nil {
		var ret SnapshotPreview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesPhysicalContext) GetClusterOk() (*SnapshotPreview, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *KubernetesPhysicalContext) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given SnapshotPreview and assigns it to the Cluster field.
func (o *KubernetesPhysicalContext) SetCluster(v SnapshotPreview) {
	o.Cluster = &v
}

func (o KubernetesPhysicalContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pod != nil {
		toSerialize["pod"] = o.Pod
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Node != nil {
		toSerialize["node"] = o.Node
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesPhysicalContext struct {
	value *KubernetesPhysicalContext
	isSet bool
}

func (v NullableKubernetesPhysicalContext) Get() *KubernetesPhysicalContext {
	return v.value
}

func (v *NullableKubernetesPhysicalContext) Set(val *KubernetesPhysicalContext) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesPhysicalContext) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesPhysicalContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesPhysicalContext(val *KubernetesPhysicalContext) *NullableKubernetesPhysicalContext {
	return &NullableKubernetesPhysicalContext{value: val, isSet: true}
}

func (v NullableKubernetesPhysicalContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesPhysicalContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
