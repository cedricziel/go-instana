/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ValidatedAlertingChannelInputInfo struct for ValidatedAlertingChannelInputInfo
type ValidatedAlertingChannelInputInfo struct {
	Id             string    `json:"id"`
	Label          string    `json:"label"`
	Query          *string   `json:"query,omitempty"`
	EventTypes     *[]string `json:"eventTypes,omitempty"`
	SelectedEvents *int32    `json:"selectedEvents,omitempty"`
	Enabled        *bool     `json:"enabled,omitempty"`
	Type           string    `json:"type"`
	EntityId       *string   `json:"entityId,omitempty"`
	Invalid        *bool     `json:"invalid,omitempty"`
}

// NewValidatedAlertingChannelInputInfo instantiates a new ValidatedAlertingChannelInputInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidatedAlertingChannelInputInfo(id string, label string, type_ string) *ValidatedAlertingChannelInputInfo {
	this := ValidatedAlertingChannelInputInfo{}
	this.Id = id
	this.Label = label
	this.Type = type_
	return &this
}

// NewValidatedAlertingChannelInputInfoWithDefaults instantiates a new ValidatedAlertingChannelInputInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidatedAlertingChannelInputInfoWithDefaults() *ValidatedAlertingChannelInputInfo {
	this := ValidatedAlertingChannelInputInfo{}
	return &this
}

// GetId returns the Id field value
func (o *ValidatedAlertingChannelInputInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ValidatedAlertingChannelInputInfo) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *ValidatedAlertingChannelInputInfo) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *ValidatedAlertingChannelInputInfo) SetLabel(v string) {
	o.Label = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *ValidatedAlertingChannelInputInfo) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *ValidatedAlertingChannelInputInfo) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *ValidatedAlertingChannelInputInfo) SetQuery(v string) {
	o.Query = &v
}

// GetEventTypes returns the EventTypes field value if set, zero value otherwise.
func (o *ValidatedAlertingChannelInputInfo) GetEventTypes() []string {
	if o == nil || o.EventTypes == nil {
		var ret []string
		return ret
	}
	return *o.EventTypes
}

// GetEventTypesOk returns a tuple with the EventTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetEventTypesOk() (*[]string, bool) {
	if o == nil || o.EventTypes == nil {
		return nil, false
	}
	return o.EventTypes, true
}

// HasEventTypes returns a boolean if a field has been set.
func (o *ValidatedAlertingChannelInputInfo) HasEventTypes() bool {
	if o != nil && o.EventTypes != nil {
		return true
	}

	return false
}

// SetEventTypes gets a reference to the given []string and assigns it to the EventTypes field.
func (o *ValidatedAlertingChannelInputInfo) SetEventTypes(v []string) {
	o.EventTypes = &v
}

// GetSelectedEvents returns the SelectedEvents field value if set, zero value otherwise.
func (o *ValidatedAlertingChannelInputInfo) GetSelectedEvents() int32 {
	if o == nil || o.SelectedEvents == nil {
		var ret int32
		return ret
	}
	return *o.SelectedEvents
}

// GetSelectedEventsOk returns a tuple with the SelectedEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetSelectedEventsOk() (*int32, bool) {
	if o == nil || o.SelectedEvents == nil {
		return nil, false
	}
	return o.SelectedEvents, true
}

// HasSelectedEvents returns a boolean if a field has been set.
func (o *ValidatedAlertingChannelInputInfo) HasSelectedEvents() bool {
	if o != nil && o.SelectedEvents != nil {
		return true
	}

	return false
}

// SetSelectedEvents gets a reference to the given int32 and assigns it to the SelectedEvents field.
func (o *ValidatedAlertingChannelInputInfo) SetSelectedEvents(v int32) {
	o.SelectedEvents = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ValidatedAlertingChannelInputInfo) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ValidatedAlertingChannelInputInfo) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ValidatedAlertingChannelInputInfo) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetType returns the Type field value
func (o *ValidatedAlertingChannelInputInfo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ValidatedAlertingChannelInputInfo) SetType(v string) {
	o.Type = v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *ValidatedAlertingChannelInputInfo) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *ValidatedAlertingChannelInputInfo) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *ValidatedAlertingChannelInputInfo) SetEntityId(v string) {
	o.EntityId = &v
}

// GetInvalid returns the Invalid field value if set, zero value otherwise.
func (o *ValidatedAlertingChannelInputInfo) GetInvalid() bool {
	if o == nil || o.Invalid == nil {
		var ret bool
		return ret
	}
	return *o.Invalid
}

// GetInvalidOk returns a tuple with the Invalid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidatedAlertingChannelInputInfo) GetInvalidOk() (*bool, bool) {
	if o == nil || o.Invalid == nil {
		return nil, false
	}
	return o.Invalid, true
}

// HasInvalid returns a boolean if a field has been set.
func (o *ValidatedAlertingChannelInputInfo) HasInvalid() bool {
	if o != nil && o.Invalid != nil {
		return true
	}

	return false
}

// SetInvalid gets a reference to the given bool and assigns it to the Invalid field.
func (o *ValidatedAlertingChannelInputInfo) SetInvalid(v bool) {
	o.Invalid = &v
}

func (o ValidatedAlertingChannelInputInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.EventTypes != nil {
		toSerialize["eventTypes"] = o.EventTypes
	}
	if o.SelectedEvents != nil {
		toSerialize["selectedEvents"] = o.SelectedEvents
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.EntityId != nil {
		toSerialize["entityId"] = o.EntityId
	}
	if o.Invalid != nil {
		toSerialize["invalid"] = o.Invalid
	}
	return json.Marshal(toSerialize)
}

type NullableValidatedAlertingChannelInputInfo struct {
	value *ValidatedAlertingChannelInputInfo
	isSet bool
}

func (v NullableValidatedAlertingChannelInputInfo) Get() *ValidatedAlertingChannelInputInfo {
	return v.value
}

func (v *NullableValidatedAlertingChannelInputInfo) Set(val *ValidatedAlertingChannelInputInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableValidatedAlertingChannelInputInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableValidatedAlertingChannelInputInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidatedAlertingChannelInputInfo(val *ValidatedAlertingChannelInputInfo) *NullableValidatedAlertingChannelInputInfo {
	return &NullableValidatedAlertingChannelInputInfo{value: val, isSet: true}
}

func (v NullableValidatedAlertingChannelInputInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidatedAlertingChannelInputInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
