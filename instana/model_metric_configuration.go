/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// MetricConfiguration struct for MetricConfiguration
type MetricConfiguration struct {
	MetricName        string   `json:"metricName"`
	MetricAggregation *string  `json:"metricAggregation,omitempty"`
	Threshold         *float64 `json:"threshold,omitempty"`
}

// NewMetricConfiguration instantiates a new MetricConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricConfiguration(metricName string) *MetricConfiguration {
	this := MetricConfiguration{}
	this.MetricName = metricName
	return &this
}

// NewMetricConfigurationWithDefaults instantiates a new MetricConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricConfigurationWithDefaults() *MetricConfiguration {
	this := MetricConfiguration{}
	return &this
}

// GetMetricName returns the MetricName field value
func (o *MetricConfiguration) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *MetricConfiguration) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *MetricConfiguration) SetMetricName(v string) {
	o.MetricName = v
}

// GetMetricAggregation returns the MetricAggregation field value if set, zero value otherwise.
func (o *MetricConfiguration) GetMetricAggregation() string {
	if o == nil || o.MetricAggregation == nil {
		var ret string
		return ret
	}
	return *o.MetricAggregation
}

// GetMetricAggregationOk returns a tuple with the MetricAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricConfiguration) GetMetricAggregationOk() (*string, bool) {
	if o == nil || o.MetricAggregation == nil {
		return nil, false
	}
	return o.MetricAggregation, true
}

// HasMetricAggregation returns a boolean if a field has been set.
func (o *MetricConfiguration) HasMetricAggregation() bool {
	if o != nil && o.MetricAggregation != nil {
		return true
	}

	return false
}

// SetMetricAggregation gets a reference to the given string and assigns it to the MetricAggregation field.
func (o *MetricConfiguration) SetMetricAggregation(v string) {
	o.MetricAggregation = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *MetricConfiguration) GetThreshold() float64 {
	if o == nil || o.Threshold == nil {
		var ret float64
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricConfiguration) GetThresholdOk() (*float64, bool) {
	if o == nil || o.Threshold == nil {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *MetricConfiguration) HasThreshold() bool {
	if o != nil && o.Threshold != nil {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float64 and assigns it to the Threshold field.
func (o *MetricConfiguration) SetThreshold(v float64) {
	o.Threshold = &v
}

func (o MetricConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metricName"] = o.MetricName
	}
	if o.MetricAggregation != nil {
		toSerialize["metricAggregation"] = o.MetricAggregation
	}
	if o.Threshold != nil {
		toSerialize["threshold"] = o.Threshold
	}
	return json.Marshal(toSerialize)
}

type NullableMetricConfiguration struct {
	value *MetricConfiguration
	isSet bool
}

func (v NullableMetricConfiguration) Get() *MetricConfiguration {
	return v.value
}

func (v *NullableMetricConfiguration) Set(val *MetricConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricConfiguration(val *MetricConfiguration) *NullableMetricConfiguration {
	return &NullableMetricConfiguration{value: val, isSet: true}
}

func (v NullableMetricConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
