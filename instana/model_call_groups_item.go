/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// CallGroupsItem struct for CallGroupsItem
type CallGroupsItem struct {
	Name      string                 `json:"name"`
	Timestamp *int64                 `json:"timestamp,omitempty"`
	Cursor    IngestionOffsetCursor  `json:"cursor"`
	Metrics   map[string][][]float32 `json:"metrics"`
}

// NewCallGroupsItem instantiates a new CallGroupsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallGroupsItem(name string, cursor IngestionOffsetCursor, metrics map[string][][]float32) *CallGroupsItem {
	this := CallGroupsItem{}
	this.Name = name
	this.Cursor = cursor
	this.Metrics = metrics
	return &this
}

// NewCallGroupsItemWithDefaults instantiates a new CallGroupsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallGroupsItemWithDefaults() *CallGroupsItem {
	this := CallGroupsItem{}
	return &this
}

// GetName returns the Name field value
func (o *CallGroupsItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CallGroupsItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CallGroupsItem) SetName(v string) {
	o.Name = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CallGroupsItem) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallGroupsItem) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CallGroupsItem) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *CallGroupsItem) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetCursor returns the Cursor field value
func (o *CallGroupsItem) GetCursor() IngestionOffsetCursor {
	if o == nil {
		var ret IngestionOffsetCursor
		return ret
	}

	return o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value
// and a boolean to check if the value has been set.
func (o *CallGroupsItem) GetCursorOk() (*IngestionOffsetCursor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cursor, true
}

// SetCursor sets field value
func (o *CallGroupsItem) SetCursor(v IngestionOffsetCursor) {
	o.Cursor = v
}

// GetMetrics returns the Metrics field value
func (o *CallGroupsItem) GetMetrics() map[string][][]float32 {
	if o == nil {
		var ret map[string][][]float32
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *CallGroupsItem) GetMetricsOk() (*map[string][][]float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *CallGroupsItem) SetMetrics(v map[string][][]float32) {
	o.Metrics = v
}

func (o CallGroupsItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["cursor"] = o.Cursor
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableCallGroupsItem struct {
	value *CallGroupsItem
	isSet bool
}

func (v NullableCallGroupsItem) Get() *CallGroupsItem {
	return v.value
}

func (v *NullableCallGroupsItem) Set(val *CallGroupsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCallGroupsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCallGroupsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallGroupsItem(val *CallGroupsItem) *NullableCallGroupsItem {
	return &NullableCallGroupsItem{value: val, isSet: true}
}

func (v NullableCallGroupsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallGroupsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
