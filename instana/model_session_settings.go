/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SessionSettings struct for SessionSettings
type SessionSettings struct {
	TokenLifeTimeInMillis *int64 `json:"tokenLifeTimeInMillis,omitempty"`
	IdleTimeInMillis      *int64 `json:"idleTimeInMillis,omitempty"`
}

// NewSessionSettings instantiates a new SessionSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionSettings() *SessionSettings {
	this := SessionSettings{}
	return &this
}

// NewSessionSettingsWithDefaults instantiates a new SessionSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionSettingsWithDefaults() *SessionSettings {
	this := SessionSettings{}
	return &this
}

// GetTokenLifeTimeInMillis returns the TokenLifeTimeInMillis field value if set, zero value otherwise.
func (o *SessionSettings) GetTokenLifeTimeInMillis() int64 {
	if o == nil || o.TokenLifeTimeInMillis == nil {
		var ret int64
		return ret
	}
	return *o.TokenLifeTimeInMillis
}

// GetTokenLifeTimeInMillisOk returns a tuple with the TokenLifeTimeInMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionSettings) GetTokenLifeTimeInMillisOk() (*int64, bool) {
	if o == nil || o.TokenLifeTimeInMillis == nil {
		return nil, false
	}
	return o.TokenLifeTimeInMillis, true
}

// HasTokenLifeTimeInMillis returns a boolean if a field has been set.
func (o *SessionSettings) HasTokenLifeTimeInMillis() bool {
	if o != nil && o.TokenLifeTimeInMillis != nil {
		return true
	}

	return false
}

// SetTokenLifeTimeInMillis gets a reference to the given int64 and assigns it to the TokenLifeTimeInMillis field.
func (o *SessionSettings) SetTokenLifeTimeInMillis(v int64) {
	o.TokenLifeTimeInMillis = &v
}

// GetIdleTimeInMillis returns the IdleTimeInMillis field value if set, zero value otherwise.
func (o *SessionSettings) GetIdleTimeInMillis() int64 {
	if o == nil || o.IdleTimeInMillis == nil {
		var ret int64
		return ret
	}
	return *o.IdleTimeInMillis
}

// GetIdleTimeInMillisOk returns a tuple with the IdleTimeInMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionSettings) GetIdleTimeInMillisOk() (*int64, bool) {
	if o == nil || o.IdleTimeInMillis == nil {
		return nil, false
	}
	return o.IdleTimeInMillis, true
}

// HasIdleTimeInMillis returns a boolean if a field has been set.
func (o *SessionSettings) HasIdleTimeInMillis() bool {
	if o != nil && o.IdleTimeInMillis != nil {
		return true
	}

	return false
}

// SetIdleTimeInMillis gets a reference to the given int64 and assigns it to the IdleTimeInMillis field.
func (o *SessionSettings) SetIdleTimeInMillis(v int64) {
	o.IdleTimeInMillis = &v
}

func (o SessionSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenLifeTimeInMillis != nil {
		toSerialize["tokenLifeTimeInMillis"] = o.TokenLifeTimeInMillis
	}
	if o.IdleTimeInMillis != nil {
		toSerialize["idleTimeInMillis"] = o.IdleTimeInMillis
	}
	return json.Marshal(toSerialize)
}

type NullableSessionSettings struct {
	value *SessionSettings
	isSet bool
}

func (v NullableSessionSettings) Get() *SessionSettings {
	return v.value
}

func (v *NullableSessionSettings) Set(val *SessionSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionSettings(val *SessionSettings) *NullableSessionSettings {
	return &NullableSessionSettings{value: val, isSet: true}
}

func (v NullableSessionSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
