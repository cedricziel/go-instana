/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ViolationsInPeriodWebsiteTimeThreshold struct for ViolationsInPeriodWebsiteTimeThreshold
type ViolationsInPeriodWebsiteTimeThreshold struct {
	WebsiteTimeThreshold
	Violations *int32 `json:"violations,omitempty"`
}

// NewViolationsInPeriodWebsiteTimeThreshold instantiates a new ViolationsInPeriodWebsiteTimeThreshold object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViolationsInPeriodWebsiteTimeThreshold() *ViolationsInPeriodWebsiteTimeThreshold {
	this := ViolationsInPeriodWebsiteTimeThreshold{}
	return &this
}

// NewViolationsInPeriodWebsiteTimeThresholdWithDefaults instantiates a new ViolationsInPeriodWebsiteTimeThreshold object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViolationsInPeriodWebsiteTimeThresholdWithDefaults() *ViolationsInPeriodWebsiteTimeThreshold {
	this := ViolationsInPeriodWebsiteTimeThreshold{}
	return &this
}

// GetViolations returns the Violations field value if set, zero value otherwise.
func (o *ViolationsInPeriodWebsiteTimeThreshold) GetViolations() int32 {
	if o == nil || o.Violations == nil {
		var ret int32
		return ret
	}
	return *o.Violations
}

// GetViolationsOk returns a tuple with the Violations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViolationsInPeriodWebsiteTimeThreshold) GetViolationsOk() (*int32, bool) {
	if o == nil || o.Violations == nil {
		return nil, false
	}
	return o.Violations, true
}

// HasViolations returns a boolean if a field has been set.
func (o *ViolationsInPeriodWebsiteTimeThreshold) HasViolations() bool {
	if o != nil && o.Violations != nil {
		return true
	}

	return false
}

// SetViolations gets a reference to the given int32 and assigns it to the Violations field.
func (o *ViolationsInPeriodWebsiteTimeThreshold) SetViolations(v int32) {
	o.Violations = &v
}

func (o ViolationsInPeriodWebsiteTimeThreshold) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedWebsiteTimeThreshold, errWebsiteTimeThreshold := json.Marshal(o.WebsiteTimeThreshold)
	if errWebsiteTimeThreshold != nil {
		return []byte{}, errWebsiteTimeThreshold
	}
	errWebsiteTimeThreshold = json.Unmarshal([]byte(serializedWebsiteTimeThreshold), &toSerialize)
	if errWebsiteTimeThreshold != nil {
		return []byte{}, errWebsiteTimeThreshold
	}
	if o.Violations != nil {
		toSerialize["violations"] = o.Violations
	}
	return json.Marshal(toSerialize)
}

type NullableViolationsInPeriodWebsiteTimeThreshold struct {
	value *ViolationsInPeriodWebsiteTimeThreshold
	isSet bool
}

func (v NullableViolationsInPeriodWebsiteTimeThreshold) Get() *ViolationsInPeriodWebsiteTimeThreshold {
	return v.value
}

func (v *NullableViolationsInPeriodWebsiteTimeThreshold) Set(val *ViolationsInPeriodWebsiteTimeThreshold) {
	v.value = val
	v.isSet = true
}

func (v NullableViolationsInPeriodWebsiteTimeThreshold) IsSet() bool {
	return v.isSet
}

func (v *NullableViolationsInPeriodWebsiteTimeThreshold) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViolationsInPeriodWebsiteTimeThreshold(val *ViolationsInPeriodWebsiteTimeThreshold) *NullableViolationsInPeriodWebsiteTimeThreshold {
	return &NullableViolationsInPeriodWebsiteTimeThreshold{value: val, isSet: true}
}

func (v NullableViolationsInPeriodWebsiteTimeThreshold) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViolationsInPeriodWebsiteTimeThreshold) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
