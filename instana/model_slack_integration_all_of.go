/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SlackIntegrationAllOf struct for SlackIntegrationAllOf
type SlackIntegrationAllOf struct {
	WebhookUrl *string `json:"webhookUrl,omitempty"`
	IconUrl    *string `json:"iconUrl,omitempty"`
	Channel    *string `json:"channel,omitempty"`
}

// NewSlackIntegrationAllOf instantiates a new SlackIntegrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlackIntegrationAllOf() *SlackIntegrationAllOf {
	this := SlackIntegrationAllOf{}
	return &this
}

// NewSlackIntegrationAllOfWithDefaults instantiates a new SlackIntegrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlackIntegrationAllOfWithDefaults() *SlackIntegrationAllOf {
	this := SlackIntegrationAllOf{}
	return &this
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *SlackIntegrationAllOf) GetWebhookUrl() string {
	if o == nil || o.WebhookUrl == nil {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackIntegrationAllOf) GetWebhookUrlOk() (*string, bool) {
	if o == nil || o.WebhookUrl == nil {
		return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *SlackIntegrationAllOf) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl != nil {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *SlackIntegrationAllOf) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *SlackIntegrationAllOf) GetIconUrl() string {
	if o == nil || o.IconUrl == nil {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackIntegrationAllOf) GetIconUrlOk() (*string, bool) {
	if o == nil || o.IconUrl == nil {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *SlackIntegrationAllOf) HasIconUrl() bool {
	if o != nil && o.IconUrl != nil {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *SlackIntegrationAllOf) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *SlackIntegrationAllOf) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackIntegrationAllOf) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *SlackIntegrationAllOf) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *SlackIntegrationAllOf) SetChannel(v string) {
	o.Channel = &v
}

func (o SlackIntegrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WebhookUrl != nil {
		toSerialize["webhookUrl"] = o.WebhookUrl
	}
	if o.IconUrl != nil {
		toSerialize["iconUrl"] = o.IconUrl
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	return json.Marshal(toSerialize)
}

type NullableSlackIntegrationAllOf struct {
	value *SlackIntegrationAllOf
	isSet bool
}

func (v NullableSlackIntegrationAllOf) Get() *SlackIntegrationAllOf {
	return v.value
}

func (v *NullableSlackIntegrationAllOf) Set(val *SlackIntegrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSlackIntegrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSlackIntegrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlackIntegrationAllOf(val *SlackIntegrationAllOf) *NullableSlackIntegrationAllOf {
	return &NullableSlackIntegrationAllOf{value: val, isSet: true}
}

func (v NullableSlackIntegrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlackIntegrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
