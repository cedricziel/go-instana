/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// AlertingConfigurationWithLastUpdated struct for AlertingConfigurationWithLastUpdated
type AlertingConfigurationWithLastUpdated struct {
	Id                          string                      `json:"id"`
	AlertName                   string                      `json:"alertName"`
	MuteUntil                   *int64                      `json:"muteUntil,omitempty"`
	IntegrationIds              []string                    `json:"integrationIds"`
	EventFilteringConfiguration EventFilteringConfiguration `json:"eventFilteringConfiguration"`
	LastUpdated                 *int64                      `json:"lastUpdated,omitempty"`
}

// NewAlertingConfigurationWithLastUpdated instantiates a new AlertingConfigurationWithLastUpdated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertingConfigurationWithLastUpdated(id string, alertName string, integrationIds []string, eventFilteringConfiguration EventFilteringConfiguration) *AlertingConfigurationWithLastUpdated {
	this := AlertingConfigurationWithLastUpdated{}
	this.Id = id
	this.AlertName = alertName
	this.IntegrationIds = integrationIds
	this.EventFilteringConfiguration = eventFilteringConfiguration
	return &this
}

// NewAlertingConfigurationWithLastUpdatedWithDefaults instantiates a new AlertingConfigurationWithLastUpdated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertingConfigurationWithLastUpdatedWithDefaults() *AlertingConfigurationWithLastUpdated {
	this := AlertingConfigurationWithLastUpdated{}
	return &this
}

// GetId returns the Id field value
func (o *AlertingConfigurationWithLastUpdated) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AlertingConfigurationWithLastUpdated) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AlertingConfigurationWithLastUpdated) SetId(v string) {
	o.Id = v
}

// GetAlertName returns the AlertName field value
func (o *AlertingConfigurationWithLastUpdated) GetAlertName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertName
}

// GetAlertNameOk returns a tuple with the AlertName field value
// and a boolean to check if the value has been set.
func (o *AlertingConfigurationWithLastUpdated) GetAlertNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertName, true
}

// SetAlertName sets field value
func (o *AlertingConfigurationWithLastUpdated) SetAlertName(v string) {
	o.AlertName = v
}

// GetMuteUntil returns the MuteUntil field value if set, zero value otherwise.
func (o *AlertingConfigurationWithLastUpdated) GetMuteUntil() int64 {
	if o == nil || o.MuteUntil == nil {
		var ret int64
		return ret
	}
	return *o.MuteUntil
}

// GetMuteUntilOk returns a tuple with the MuteUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertingConfigurationWithLastUpdated) GetMuteUntilOk() (*int64, bool) {
	if o == nil || o.MuteUntil == nil {
		return nil, false
	}
	return o.MuteUntil, true
}

// HasMuteUntil returns a boolean if a field has been set.
func (o *AlertingConfigurationWithLastUpdated) HasMuteUntil() bool {
	if o != nil && o.MuteUntil != nil {
		return true
	}

	return false
}

// SetMuteUntil gets a reference to the given int64 and assigns it to the MuteUntil field.
func (o *AlertingConfigurationWithLastUpdated) SetMuteUntil(v int64) {
	o.MuteUntil = &v
}

// GetIntegrationIds returns the IntegrationIds field value
func (o *AlertingConfigurationWithLastUpdated) GetIntegrationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IntegrationIds
}

// GetIntegrationIdsOk returns a tuple with the IntegrationIds field value
// and a boolean to check if the value has been set.
func (o *AlertingConfigurationWithLastUpdated) GetIntegrationIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationIds, true
}

// SetIntegrationIds sets field value
func (o *AlertingConfigurationWithLastUpdated) SetIntegrationIds(v []string) {
	o.IntegrationIds = v
}

// GetEventFilteringConfiguration returns the EventFilteringConfiguration field value
func (o *AlertingConfigurationWithLastUpdated) GetEventFilteringConfiguration() EventFilteringConfiguration {
	if o == nil {
		var ret EventFilteringConfiguration
		return ret
	}

	return o.EventFilteringConfiguration
}

// GetEventFilteringConfigurationOk returns a tuple with the EventFilteringConfiguration field value
// and a boolean to check if the value has been set.
func (o *AlertingConfigurationWithLastUpdated) GetEventFilteringConfigurationOk() (*EventFilteringConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventFilteringConfiguration, true
}

// SetEventFilteringConfiguration sets field value
func (o *AlertingConfigurationWithLastUpdated) SetEventFilteringConfiguration(v EventFilteringConfiguration) {
	o.EventFilteringConfiguration = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *AlertingConfigurationWithLastUpdated) GetLastUpdated() int64 {
	if o == nil || o.LastUpdated == nil {
		var ret int64
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertingConfigurationWithLastUpdated) GetLastUpdatedOk() (*int64, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *AlertingConfigurationWithLastUpdated) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given int64 and assigns it to the LastUpdated field.
func (o *AlertingConfigurationWithLastUpdated) SetLastUpdated(v int64) {
	o.LastUpdated = &v
}

func (o AlertingConfigurationWithLastUpdated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["alertName"] = o.AlertName
	}
	if o.MuteUntil != nil {
		toSerialize["muteUntil"] = o.MuteUntil
	}
	if true {
		toSerialize["integrationIds"] = o.IntegrationIds
	}
	if true {
		toSerialize["eventFilteringConfiguration"] = o.EventFilteringConfiguration
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableAlertingConfigurationWithLastUpdated struct {
	value *AlertingConfigurationWithLastUpdated
	isSet bool
}

func (v NullableAlertingConfigurationWithLastUpdated) Get() *AlertingConfigurationWithLastUpdated {
	return v.value
}

func (v *NullableAlertingConfigurationWithLastUpdated) Set(val *AlertingConfigurationWithLastUpdated) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertingConfigurationWithLastUpdated) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertingConfigurationWithLastUpdated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertingConfigurationWithLastUpdated(val *AlertingConfigurationWithLastUpdated) *NullableAlertingConfigurationWithLastUpdated {
	return &NullableAlertingConfigurationWithLastUpdated{value: val, isSet: true}
}

func (v NullableAlertingConfigurationWithLastUpdated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertingConfigurationWithLastUpdated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
