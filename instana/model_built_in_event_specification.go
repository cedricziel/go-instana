/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// BuiltInEventSpecification struct for BuiltInEventSpecification
type BuiltInEventSpecification struct {
	Id            string       `json:"id"`
	ShortPluginId string       `json:"shortPluginId"`
	Name          string       `json:"name"`
	Description   *string      `json:"description,omitempty"`
	HyperParams   []HyperParam `json:"hyperParams"`
	RuleInputs    []RuleInput  `json:"ruleInputs"`
	Severity      *int32       `json:"severity,omitempty"`
	Triggering    *bool        `json:"triggering,omitempty"`
	Enabled       *bool        `json:"enabled,omitempty"`
}

// NewBuiltInEventSpecification instantiates a new BuiltInEventSpecification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuiltInEventSpecification(id string, shortPluginId string, name string, hyperParams []HyperParam, ruleInputs []RuleInput) *BuiltInEventSpecification {
	this := BuiltInEventSpecification{}
	this.Id = id
	this.ShortPluginId = shortPluginId
	this.Name = name
	this.HyperParams = hyperParams
	this.RuleInputs = ruleInputs
	return &this
}

// NewBuiltInEventSpecificationWithDefaults instantiates a new BuiltInEventSpecification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuiltInEventSpecificationWithDefaults() *BuiltInEventSpecification {
	this := BuiltInEventSpecification{}
	return &this
}

// GetId returns the Id field value
func (o *BuiltInEventSpecification) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BuiltInEventSpecification) SetId(v string) {
	o.Id = v
}

// GetShortPluginId returns the ShortPluginId field value
func (o *BuiltInEventSpecification) GetShortPluginId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortPluginId
}

// GetShortPluginIdOk returns a tuple with the ShortPluginId field value
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetShortPluginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShortPluginId, true
}

// SetShortPluginId sets field value
func (o *BuiltInEventSpecification) SetShortPluginId(v string) {
	o.ShortPluginId = v
}

// GetName returns the Name field value
func (o *BuiltInEventSpecification) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BuiltInEventSpecification) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BuiltInEventSpecification) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BuiltInEventSpecification) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BuiltInEventSpecification) SetDescription(v string) {
	o.Description = &v
}

// GetHyperParams returns the HyperParams field value
func (o *BuiltInEventSpecification) GetHyperParams() []HyperParam {
	if o == nil {
		var ret []HyperParam
		return ret
	}

	return o.HyperParams
}

// GetHyperParamsOk returns a tuple with the HyperParams field value
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetHyperParamsOk() (*[]HyperParam, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HyperParams, true
}

// SetHyperParams sets field value
func (o *BuiltInEventSpecification) SetHyperParams(v []HyperParam) {
	o.HyperParams = v
}

// GetRuleInputs returns the RuleInputs field value
func (o *BuiltInEventSpecification) GetRuleInputs() []RuleInput {
	if o == nil {
		var ret []RuleInput
		return ret
	}

	return o.RuleInputs
}

// GetRuleInputsOk returns a tuple with the RuleInputs field value
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetRuleInputsOk() (*[]RuleInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleInputs, true
}

// SetRuleInputs sets field value
func (o *BuiltInEventSpecification) SetRuleInputs(v []RuleInput) {
	o.RuleInputs = v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *BuiltInEventSpecification) GetSeverity() int32 {
	if o == nil || o.Severity == nil {
		var ret int32
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetSeverityOk() (*int32, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *BuiltInEventSpecification) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given int32 and assigns it to the Severity field.
func (o *BuiltInEventSpecification) SetSeverity(v int32) {
	o.Severity = &v
}

// GetTriggering returns the Triggering field value if set, zero value otherwise.
func (o *BuiltInEventSpecification) GetTriggering() bool {
	if o == nil || o.Triggering == nil {
		var ret bool
		return ret
	}
	return *o.Triggering
}

// GetTriggeringOk returns a tuple with the Triggering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetTriggeringOk() (*bool, bool) {
	if o == nil || o.Triggering == nil {
		return nil, false
	}
	return o.Triggering, true
}

// HasTriggering returns a boolean if a field has been set.
func (o *BuiltInEventSpecification) HasTriggering() bool {
	if o != nil && o.Triggering != nil {
		return true
	}

	return false
}

// SetTriggering gets a reference to the given bool and assigns it to the Triggering field.
func (o *BuiltInEventSpecification) SetTriggering(v bool) {
	o.Triggering = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BuiltInEventSpecification) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuiltInEventSpecification) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BuiltInEventSpecification) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BuiltInEventSpecification) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o BuiltInEventSpecification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["shortPluginId"] = o.ShortPluginId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["hyperParams"] = o.HyperParams
	}
	if true {
		toSerialize["ruleInputs"] = o.RuleInputs
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Triggering != nil {
		toSerialize["triggering"] = o.Triggering
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableBuiltInEventSpecification struct {
	value *BuiltInEventSpecification
	isSet bool
}

func (v NullableBuiltInEventSpecification) Get() *BuiltInEventSpecification {
	return v.value
}

func (v *NullableBuiltInEventSpecification) Set(val *BuiltInEventSpecification) {
	v.value = val
	v.isSet = true
}

func (v NullableBuiltInEventSpecification) IsSet() bool {
	return v.isSet
}

func (v *NullableBuiltInEventSpecification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuiltInEventSpecification(val *BuiltInEventSpecification) *NullableBuiltInEventSpecification {
	return &NullableBuiltInEventSpecification{value: val, isSet: true}
}

func (v NullableBuiltInEventSpecification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuiltInEventSpecification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
