/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// PermissionSet struct for PermissionSet
type PermissionSet struct {
	Id                      *string  `json:"id,omitempty"`
	Name                    string   `json:"name"`
	Permissions             []string `json:"permissions"`
	ApplicationIds          []string `json:"applicationIds"`
	KubernetesClusterUUIDs  []string `json:"kubernetesClusterUUIDs"`
	KubernetesNamespaceUIDs []string `json:"kubernetesNamespaceUIDs"`
	WebsiteIds              []string `json:"websiteIds"`
	MobileAppIds            []string `json:"mobileAppIds"`
	InfraDfqFilter          *string  `json:"infraDfqFilter,omitempty"`
}

// NewPermissionSet instantiates a new PermissionSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionSet(name string, permissions []string, applicationIds []string, kubernetesClusterUUIDs []string, kubernetesNamespaceUIDs []string, websiteIds []string, mobileAppIds []string) *PermissionSet {
	this := PermissionSet{}
	this.Name = name
	this.Permissions = permissions
	this.ApplicationIds = applicationIds
	this.KubernetesClusterUUIDs = kubernetesClusterUUIDs
	this.KubernetesNamespaceUIDs = kubernetesNamespaceUIDs
	this.WebsiteIds = websiteIds
	this.MobileAppIds = mobileAppIds
	return &this
}

// NewPermissionSetWithDefaults instantiates a new PermissionSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionSetWithDefaults() *PermissionSet {
	this := PermissionSet{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PermissionSet) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PermissionSet) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PermissionSet) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *PermissionSet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PermissionSet) SetName(v string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value
func (o *PermissionSet) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetPermissionsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *PermissionSet) SetPermissions(v []string) {
	o.Permissions = v
}

// GetApplicationIds returns the ApplicationIds field value
func (o *PermissionSet) GetApplicationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ApplicationIds
}

// GetApplicationIdsOk returns a tuple with the ApplicationIds field value
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetApplicationIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationIds, true
}

// SetApplicationIds sets field value
func (o *PermissionSet) SetApplicationIds(v []string) {
	o.ApplicationIds = v
}

// GetKubernetesClusterUUIDs returns the KubernetesClusterUUIDs field value
func (o *PermissionSet) GetKubernetesClusterUUIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.KubernetesClusterUUIDs
}

// GetKubernetesClusterUUIDsOk returns a tuple with the KubernetesClusterUUIDs field value
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetKubernetesClusterUUIDsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesClusterUUIDs, true
}

// SetKubernetesClusterUUIDs sets field value
func (o *PermissionSet) SetKubernetesClusterUUIDs(v []string) {
	o.KubernetesClusterUUIDs = v
}

// GetKubernetesNamespaceUIDs returns the KubernetesNamespaceUIDs field value
func (o *PermissionSet) GetKubernetesNamespaceUIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.KubernetesNamespaceUIDs
}

// GetKubernetesNamespaceUIDsOk returns a tuple with the KubernetesNamespaceUIDs field value
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetKubernetesNamespaceUIDsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesNamespaceUIDs, true
}

// SetKubernetesNamespaceUIDs sets field value
func (o *PermissionSet) SetKubernetesNamespaceUIDs(v []string) {
	o.KubernetesNamespaceUIDs = v
}

// GetWebsiteIds returns the WebsiteIds field value
func (o *PermissionSet) GetWebsiteIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.WebsiteIds
}

// GetWebsiteIdsOk returns a tuple with the WebsiteIds field value
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetWebsiteIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebsiteIds, true
}

// SetWebsiteIds sets field value
func (o *PermissionSet) SetWebsiteIds(v []string) {
	o.WebsiteIds = v
}

// GetMobileAppIds returns the MobileAppIds field value
func (o *PermissionSet) GetMobileAppIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MobileAppIds
}

// GetMobileAppIdsOk returns a tuple with the MobileAppIds field value
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetMobileAppIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MobileAppIds, true
}

// SetMobileAppIds sets field value
func (o *PermissionSet) SetMobileAppIds(v []string) {
	o.MobileAppIds = v
}

// GetInfraDfqFilter returns the InfraDfqFilter field value if set, zero value otherwise.
func (o *PermissionSet) GetInfraDfqFilter() string {
	if o == nil || o.InfraDfqFilter == nil {
		var ret string
		return ret
	}
	return *o.InfraDfqFilter
}

// GetInfraDfqFilterOk returns a tuple with the InfraDfqFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionSet) GetInfraDfqFilterOk() (*string, bool) {
	if o == nil || o.InfraDfqFilter == nil {
		return nil, false
	}
	return o.InfraDfqFilter, true
}

// HasInfraDfqFilter returns a boolean if a field has been set.
func (o *PermissionSet) HasInfraDfqFilter() bool {
	if o != nil && o.InfraDfqFilter != nil {
		return true
	}

	return false
}

// SetInfraDfqFilter gets a reference to the given string and assigns it to the InfraDfqFilter field.
func (o *PermissionSet) SetInfraDfqFilter(v string) {
	o.InfraDfqFilter = &v
}

func (o PermissionSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	if true {
		toSerialize["applicationIds"] = o.ApplicationIds
	}
	if true {
		toSerialize["kubernetesClusterUUIDs"] = o.KubernetesClusterUUIDs
	}
	if true {
		toSerialize["kubernetesNamespaceUIDs"] = o.KubernetesNamespaceUIDs
	}
	if true {
		toSerialize["websiteIds"] = o.WebsiteIds
	}
	if true {
		toSerialize["mobileAppIds"] = o.MobileAppIds
	}
	if o.InfraDfqFilter != nil {
		toSerialize["infraDfqFilter"] = o.InfraDfqFilter
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionSet struct {
	value *PermissionSet
	isSet bool
}

func (v NullablePermissionSet) Get() *PermissionSet {
	return v.value
}

func (v *NullablePermissionSet) Set(val *PermissionSet) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionSet) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionSet(val *PermissionSet) *NullablePermissionSet {
	return &NullablePermissionSet{value: val, isSet: true}
}

func (v NullablePermissionSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
