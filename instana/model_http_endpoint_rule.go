/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// HttpEndpointRule struct for HttpEndpointRule
type HttpEndpointRule struct {
	Enabled      *bool                         `json:"enabled,omitempty"`
	PathSegments []HttpPathSegmentMatchingRule `json:"pathSegments"`
	TestCases    *[]string                     `json:"testCases,omitempty"`
}

// NewHttpEndpointRule instantiates a new HttpEndpointRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpEndpointRule(pathSegments []HttpPathSegmentMatchingRule) *HttpEndpointRule {
	this := HttpEndpointRule{}
	this.PathSegments = pathSegments
	return &this
}

// NewHttpEndpointRuleWithDefaults instantiates a new HttpEndpointRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpEndpointRuleWithDefaults() *HttpEndpointRule {
	this := HttpEndpointRule{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *HttpEndpointRule) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointRule) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *HttpEndpointRule) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *HttpEndpointRule) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPathSegments returns the PathSegments field value
func (o *HttpEndpointRule) GetPathSegments() []HttpPathSegmentMatchingRule {
	if o == nil {
		var ret []HttpPathSegmentMatchingRule
		return ret
	}

	return o.PathSegments
}

// GetPathSegmentsOk returns a tuple with the PathSegments field value
// and a boolean to check if the value has been set.
func (o *HttpEndpointRule) GetPathSegmentsOk() (*[]HttpPathSegmentMatchingRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathSegments, true
}

// SetPathSegments sets field value
func (o *HttpEndpointRule) SetPathSegments(v []HttpPathSegmentMatchingRule) {
	o.PathSegments = v
}

// GetTestCases returns the TestCases field value if set, zero value otherwise.
func (o *HttpEndpointRule) GetTestCases() []string {
	if o == nil || o.TestCases == nil {
		var ret []string
		return ret
	}
	return *o.TestCases
}

// GetTestCasesOk returns a tuple with the TestCases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEndpointRule) GetTestCasesOk() (*[]string, bool) {
	if o == nil || o.TestCases == nil {
		return nil, false
	}
	return o.TestCases, true
}

// HasTestCases returns a boolean if a field has been set.
func (o *HttpEndpointRule) HasTestCases() bool {
	if o != nil && o.TestCases != nil {
		return true
	}

	return false
}

// SetTestCases gets a reference to the given []string and assigns it to the TestCases field.
func (o *HttpEndpointRule) SetTestCases(v []string) {
	o.TestCases = &v
}

func (o HttpEndpointRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["pathSegments"] = o.PathSegments
	}
	if o.TestCases != nil {
		toSerialize["testCases"] = o.TestCases
	}
	return json.Marshal(toSerialize)
}

type NullableHttpEndpointRule struct {
	value *HttpEndpointRule
	isSet bool
}

func (v NullableHttpEndpointRule) Get() *HttpEndpointRule {
	return v.value
}

func (v *NullableHttpEndpointRule) Set(val *HttpEndpointRule) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpEndpointRule) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpEndpointRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpEndpointRule(val *HttpEndpointRule) *NullableHttpEndpointRule {
	return &NullableHttpEndpointRule{value: val, isSet: true}
}

func (v NullableHttpEndpointRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpEndpointRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
