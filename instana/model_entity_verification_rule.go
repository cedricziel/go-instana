/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// EntityVerificationRule struct for EntityVerificationRule
type EntityVerificationRule struct {
	AbstractRule
	MatchingEntityType  string `json:"matchingEntityType"`
	MatchingOperator    string `json:"matchingOperator"`
	MatchingEntityLabel string `json:"matchingEntityLabel"`
	OfflineDuration     *int64 `json:"offlineDuration,omitempty"`
}

// NewEntityVerificationRule instantiates a new EntityVerificationRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityVerificationRule(matchingEntityType string, matchingOperator string, matchingEntityLabel string) *EntityVerificationRule {
	this := EntityVerificationRule{}
	this.MatchingEntityType = matchingEntityType
	this.MatchingOperator = matchingOperator
	this.MatchingEntityLabel = matchingEntityLabel
	return &this
}

// NewEntityVerificationRuleWithDefaults instantiates a new EntityVerificationRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityVerificationRuleWithDefaults() *EntityVerificationRule {
	this := EntityVerificationRule{}
	return &this
}

// GetMatchingEntityType returns the MatchingEntityType field value
func (o *EntityVerificationRule) GetMatchingEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MatchingEntityType
}

// GetMatchingEntityTypeOk returns a tuple with the MatchingEntityType field value
// and a boolean to check if the value has been set.
func (o *EntityVerificationRule) GetMatchingEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatchingEntityType, true
}

// SetMatchingEntityType sets field value
func (o *EntityVerificationRule) SetMatchingEntityType(v string) {
	o.MatchingEntityType = v
}

// GetMatchingOperator returns the MatchingOperator field value
func (o *EntityVerificationRule) GetMatchingOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MatchingOperator
}

// GetMatchingOperatorOk returns a tuple with the MatchingOperator field value
// and a boolean to check if the value has been set.
func (o *EntityVerificationRule) GetMatchingOperatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatchingOperator, true
}

// SetMatchingOperator sets field value
func (o *EntityVerificationRule) SetMatchingOperator(v string) {
	o.MatchingOperator = v
}

// GetMatchingEntityLabel returns the MatchingEntityLabel field value
func (o *EntityVerificationRule) GetMatchingEntityLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MatchingEntityLabel
}

// GetMatchingEntityLabelOk returns a tuple with the MatchingEntityLabel field value
// and a boolean to check if the value has been set.
func (o *EntityVerificationRule) GetMatchingEntityLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatchingEntityLabel, true
}

// SetMatchingEntityLabel sets field value
func (o *EntityVerificationRule) SetMatchingEntityLabel(v string) {
	o.MatchingEntityLabel = v
}

// GetOfflineDuration returns the OfflineDuration field value if set, zero value otherwise.
func (o *EntityVerificationRule) GetOfflineDuration() int64 {
	if o == nil || o.OfflineDuration == nil {
		var ret int64
		return ret
	}
	return *o.OfflineDuration
}

// GetOfflineDurationOk returns a tuple with the OfflineDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityVerificationRule) GetOfflineDurationOk() (*int64, bool) {
	if o == nil || o.OfflineDuration == nil {
		return nil, false
	}
	return o.OfflineDuration, true
}

// HasOfflineDuration returns a boolean if a field has been set.
func (o *EntityVerificationRule) HasOfflineDuration() bool {
	if o != nil && o.OfflineDuration != nil {
		return true
	}

	return false
}

// SetOfflineDuration gets a reference to the given int64 and assigns it to the OfflineDuration field.
func (o *EntityVerificationRule) SetOfflineDuration(v int64) {
	o.OfflineDuration = &v
}

func (o EntityVerificationRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedAbstractRule, errAbstractRule := json.Marshal(o.AbstractRule)
	if errAbstractRule != nil {
		return []byte{}, errAbstractRule
	}
	errAbstractRule = json.Unmarshal([]byte(serializedAbstractRule), &toSerialize)
	if errAbstractRule != nil {
		return []byte{}, errAbstractRule
	}
	if true {
		toSerialize["matchingEntityType"] = o.MatchingEntityType
	}
	if true {
		toSerialize["matchingOperator"] = o.MatchingOperator
	}
	if true {
		toSerialize["matchingEntityLabel"] = o.MatchingEntityLabel
	}
	if o.OfflineDuration != nil {
		toSerialize["offlineDuration"] = o.OfflineDuration
	}
	return json.Marshal(toSerialize)
}

type NullableEntityVerificationRule struct {
	value *EntityVerificationRule
	isSet bool
}

func (v NullableEntityVerificationRule) Get() *EntityVerificationRule {
	return v.value
}

func (v *NullableEntityVerificationRule) Set(val *EntityVerificationRule) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityVerificationRule) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityVerificationRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityVerificationRule(val *EntityVerificationRule) *NullableEntityVerificationRule {
	return &NullableEntityVerificationRule{value: val, isSet: true}
}

func (v NullableEntityVerificationRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityVerificationRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
