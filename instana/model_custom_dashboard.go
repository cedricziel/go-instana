/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// CustomDashboard struct for CustomDashboard
type CustomDashboard struct {
	Id          string       `json:"id"`
	Title       string       `json:"title"`
	AccessRules []AccessRule `json:"accessRules"`
	Widgets     []Widget     `json:"widgets"`
}

// NewCustomDashboard instantiates a new CustomDashboard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDashboard(id string, title string, accessRules []AccessRule, widgets []Widget) *CustomDashboard {
	this := CustomDashboard{}
	this.Id = id
	this.Title = title
	this.AccessRules = accessRules
	this.Widgets = widgets
	return &this
}

// NewCustomDashboardWithDefaults instantiates a new CustomDashboard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDashboardWithDefaults() *CustomDashboard {
	this := CustomDashboard{}
	return &this
}

// GetId returns the Id field value
func (o *CustomDashboard) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomDashboard) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomDashboard) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *CustomDashboard) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CustomDashboard) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CustomDashboard) SetTitle(v string) {
	o.Title = v
}

// GetAccessRules returns the AccessRules field value
func (o *CustomDashboard) GetAccessRules() []AccessRule {
	if o == nil {
		var ret []AccessRule
		return ret
	}

	return o.AccessRules
}

// GetAccessRulesOk returns a tuple with the AccessRules field value
// and a boolean to check if the value has been set.
func (o *CustomDashboard) GetAccessRulesOk() (*[]AccessRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessRules, true
}

// SetAccessRules sets field value
func (o *CustomDashboard) SetAccessRules(v []AccessRule) {
	o.AccessRules = v
}

// GetWidgets returns the Widgets field value
func (o *CustomDashboard) GetWidgets() []Widget {
	if o == nil {
		var ret []Widget
		return ret
	}

	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value
// and a boolean to check if the value has been set.
func (o *CustomDashboard) GetWidgetsOk() (*[]Widget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Widgets, true
}

// SetWidgets sets field value
func (o *CustomDashboard) SetWidgets(v []Widget) {
	o.Widgets = v
}

func (o CustomDashboard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["accessRules"] = o.AccessRules
	}
	if true {
		toSerialize["widgets"] = o.Widgets
	}
	return json.Marshal(toSerialize)
}

type NullableCustomDashboard struct {
	value *CustomDashboard
	isSet bool
}

func (v NullableCustomDashboard) Get() *CustomDashboard {
	return v.value
}

func (v *NullableCustomDashboard) Set(val *CustomDashboard) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDashboard) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDashboard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDashboard(val *CustomDashboard) *NullableCustomDashboard {
	return &NullableCustomDashboard{value: val, isSet: true}
}

func (v NullableCustomDashboard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDashboard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
