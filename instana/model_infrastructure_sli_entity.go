/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// InfrastructureSliEntity struct for InfrastructureSliEntity
type InfrastructureSliEntity struct {
	SliEntity
	InstanceAggregation string `json:"instanceAggregation"`
	Query               string `json:"query"`
}

// NewInfrastructureSliEntity instantiates a new InfrastructureSliEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfrastructureSliEntity(instanceAggregation string, query string) *InfrastructureSliEntity {
	this := InfrastructureSliEntity{}
	this.InstanceAggregation = instanceAggregation
	this.Query = query
	return &this
}

// NewInfrastructureSliEntityWithDefaults instantiates a new InfrastructureSliEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfrastructureSliEntityWithDefaults() *InfrastructureSliEntity {
	this := InfrastructureSliEntity{}
	return &this
}

// GetInstanceAggregation returns the InstanceAggregation field value
func (o *InfrastructureSliEntity) GetInstanceAggregation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceAggregation
}

// GetInstanceAggregationOk returns a tuple with the InstanceAggregation field value
// and a boolean to check if the value has been set.
func (o *InfrastructureSliEntity) GetInstanceAggregationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceAggregation, true
}

// SetInstanceAggregation sets field value
func (o *InfrastructureSliEntity) SetInstanceAggregation(v string) {
	o.InstanceAggregation = v
}

// GetQuery returns the Query field value
func (o *InfrastructureSliEntity) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *InfrastructureSliEntity) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *InfrastructureSliEntity) SetQuery(v string) {
	o.Query = v
}

func (o InfrastructureSliEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedSliEntity, errSliEntity := json.Marshal(o.SliEntity)
	if errSliEntity != nil {
		return []byte{}, errSliEntity
	}
	errSliEntity = json.Unmarshal([]byte(serializedSliEntity), &toSerialize)
	if errSliEntity != nil {
		return []byte{}, errSliEntity
	}
	if true {
		toSerialize["instanceAggregation"] = o.InstanceAggregation
	}
	if true {
		toSerialize["query"] = o.Query
	}
	return json.Marshal(toSerialize)
}

type NullableInfrastructureSliEntity struct {
	value *InfrastructureSliEntity
	isSet bool
}

func (v NullableInfrastructureSliEntity) Get() *InfrastructureSliEntity {
	return v.value
}

func (v *NullableInfrastructureSliEntity) Set(val *InfrastructureSliEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableInfrastructureSliEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableInfrastructureSliEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfrastructureSliEntity(val *InfrastructureSliEntity) *NullableInfrastructureSliEntity {
	return &NullableInfrastructureSliEntity{value: val, isSet: true}
}

func (v NullableInfrastructureSliEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfrastructureSliEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
