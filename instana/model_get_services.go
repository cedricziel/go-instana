/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// GetServices struct for GetServices
type GetServices struct {
	Pagination               *Pagination                  `json:"pagination,omitempty"`
	Order                    *Order                       `json:"order,omitempty"`
	TimeFrame                *TimeFrame                   `json:"timeFrame,omitempty"`
	Metrics                  []AppDataMetricConfiguration `json:"metrics"`
	NameFilter               *string                      `json:"nameFilter,omitempty"`
	ApplicationId            *string                      `json:"applicationId,omitempty"`
	ServiceId                *string                      `json:"serviceId,omitempty"`
	Technologies             *[]string                    `json:"technologies,omitempty"`
	ContextScope             *string                      `json:"contextScope,omitempty"`
	ApplicationBoundaryScope *string                      `json:"applicationBoundaryScope,omitempty"`
}

// NewGetServices instantiates a new GetServices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServices(metrics []AppDataMetricConfiguration) *GetServices {
	this := GetServices{}
	this.Metrics = metrics
	return &this
}

// NewGetServicesWithDefaults instantiates a new GetServices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServicesWithDefaults() *GetServices {
	this := GetServices{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GetServices) GetPagination() Pagination {
	if o == nil || o.Pagination == nil {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetPaginationOk() (*Pagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GetServices) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *GetServices) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *GetServices) GetOrder() Order {
	if o == nil || o.Order == nil {
		var ret Order
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetOrderOk() (*Order, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *GetServices) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given Order and assigns it to the Order field.
func (o *GetServices) SetOrder(v Order) {
	o.Order = &v
}

// GetTimeFrame returns the TimeFrame field value if set, zero value otherwise.
func (o *GetServices) GetTimeFrame() TimeFrame {
	if o == nil || o.TimeFrame == nil {
		var ret TimeFrame
		return ret
	}
	return *o.TimeFrame
}

// GetTimeFrameOk returns a tuple with the TimeFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetTimeFrameOk() (*TimeFrame, bool) {
	if o == nil || o.TimeFrame == nil {
		return nil, false
	}
	return o.TimeFrame, true
}

// HasTimeFrame returns a boolean if a field has been set.
func (o *GetServices) HasTimeFrame() bool {
	if o != nil && o.TimeFrame != nil {
		return true
	}

	return false
}

// SetTimeFrame gets a reference to the given TimeFrame and assigns it to the TimeFrame field.
func (o *GetServices) SetTimeFrame(v TimeFrame) {
	o.TimeFrame = &v
}

// GetMetrics returns the Metrics field value
func (o *GetServices) GetMetrics() []AppDataMetricConfiguration {
	if o == nil {
		var ret []AppDataMetricConfiguration
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *GetServices) GetMetricsOk() (*[]AppDataMetricConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *GetServices) SetMetrics(v []AppDataMetricConfiguration) {
	o.Metrics = v
}

// GetNameFilter returns the NameFilter field value if set, zero value otherwise.
func (o *GetServices) GetNameFilter() string {
	if o == nil || o.NameFilter == nil {
		var ret string
		return ret
	}
	return *o.NameFilter
}

// GetNameFilterOk returns a tuple with the NameFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetNameFilterOk() (*string, bool) {
	if o == nil || o.NameFilter == nil {
		return nil, false
	}
	return o.NameFilter, true
}

// HasNameFilter returns a boolean if a field has been set.
func (o *GetServices) HasNameFilter() bool {
	if o != nil && o.NameFilter != nil {
		return true
	}

	return false
}

// SetNameFilter gets a reference to the given string and assigns it to the NameFilter field.
func (o *GetServices) SetNameFilter(v string) {
	o.NameFilter = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *GetServices) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *GetServices) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *GetServices) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *GetServices) GetServiceId() string {
	if o == nil || o.ServiceId == nil {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetServiceIdOk() (*string, bool) {
	if o == nil || o.ServiceId == nil {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *GetServices) HasServiceId() bool {
	if o != nil && o.ServiceId != nil {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *GetServices) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetTechnologies returns the Technologies field value if set, zero value otherwise.
func (o *GetServices) GetTechnologies() []string {
	if o == nil || o.Technologies == nil {
		var ret []string
		return ret
	}
	return *o.Technologies
}

// GetTechnologiesOk returns a tuple with the Technologies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetTechnologiesOk() (*[]string, bool) {
	if o == nil || o.Technologies == nil {
		return nil, false
	}
	return o.Technologies, true
}

// HasTechnologies returns a boolean if a field has been set.
func (o *GetServices) HasTechnologies() bool {
	if o != nil && o.Technologies != nil {
		return true
	}

	return false
}

// SetTechnologies gets a reference to the given []string and assigns it to the Technologies field.
func (o *GetServices) SetTechnologies(v []string) {
	o.Technologies = &v
}

// GetContextScope returns the ContextScope field value if set, zero value otherwise.
func (o *GetServices) GetContextScope() string {
	if o == nil || o.ContextScope == nil {
		var ret string
		return ret
	}
	return *o.ContextScope
}

// GetContextScopeOk returns a tuple with the ContextScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetContextScopeOk() (*string, bool) {
	if o == nil || o.ContextScope == nil {
		return nil, false
	}
	return o.ContextScope, true
}

// HasContextScope returns a boolean if a field has been set.
func (o *GetServices) HasContextScope() bool {
	if o != nil && o.ContextScope != nil {
		return true
	}

	return false
}

// SetContextScope gets a reference to the given string and assigns it to the ContextScope field.
func (o *GetServices) SetContextScope(v string) {
	o.ContextScope = &v
}

// GetApplicationBoundaryScope returns the ApplicationBoundaryScope field value if set, zero value otherwise.
func (o *GetServices) GetApplicationBoundaryScope() string {
	if o == nil || o.ApplicationBoundaryScope == nil {
		var ret string
		return ret
	}
	return *o.ApplicationBoundaryScope
}

// GetApplicationBoundaryScopeOk returns a tuple with the ApplicationBoundaryScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServices) GetApplicationBoundaryScopeOk() (*string, bool) {
	if o == nil || o.ApplicationBoundaryScope == nil {
		return nil, false
	}
	return o.ApplicationBoundaryScope, true
}

// HasApplicationBoundaryScope returns a boolean if a field has been set.
func (o *GetServices) HasApplicationBoundaryScope() bool {
	if o != nil && o.ApplicationBoundaryScope != nil {
		return true
	}

	return false
}

// SetApplicationBoundaryScope gets a reference to the given string and assigns it to the ApplicationBoundaryScope field.
func (o *GetServices) SetApplicationBoundaryScope(v string) {
	o.ApplicationBoundaryScope = &v
}

func (o GetServices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.TimeFrame != nil {
		toSerialize["timeFrame"] = o.TimeFrame
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	if o.NameFilter != nil {
		toSerialize["nameFilter"] = o.NameFilter
	}
	if o.ApplicationId != nil {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.ServiceId != nil {
		toSerialize["serviceId"] = o.ServiceId
	}
	if o.Technologies != nil {
		toSerialize["technologies"] = o.Technologies
	}
	if o.ContextScope != nil {
		toSerialize["contextScope"] = o.ContextScope
	}
	if o.ApplicationBoundaryScope != nil {
		toSerialize["applicationBoundaryScope"] = o.ApplicationBoundaryScope
	}
	return json.Marshal(toSerialize)
}

type NullableGetServices struct {
	value *GetServices
	isSet bool
}

func (v NullableGetServices) Get() *GetServices {
	return v.value
}

func (v *NullableGetServices) Set(val *GetServices) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServices) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServices(val *GetServices) *NullableGetServices {
	return &NullableGetServices{value: val, isSet: true}
}

func (v NullableGetServices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
