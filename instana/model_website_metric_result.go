/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// WebsiteMetricResult struct for WebsiteMetricResult
type WebsiteMetricResult struct {
	Empty *bool `json:"empty,omitempty"`
}

// NewWebsiteMetricResult instantiates a new WebsiteMetricResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteMetricResult() *WebsiteMetricResult {
	this := WebsiteMetricResult{}
	return &this
}

// NewWebsiteMetricResultWithDefaults instantiates a new WebsiteMetricResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteMetricResultWithDefaults() *WebsiteMetricResult {
	this := WebsiteMetricResult{}
	return &this
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *WebsiteMetricResult) GetEmpty() bool {
	if o == nil || o.Empty == nil {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteMetricResult) GetEmptyOk() (*bool, bool) {
	if o == nil || o.Empty == nil {
		return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *WebsiteMetricResult) HasEmpty() bool {
	if o != nil && o.Empty != nil {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *WebsiteMetricResult) SetEmpty(v bool) {
	o.Empty = &v
}

func (o WebsiteMetricResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Empty != nil {
		toSerialize["empty"] = o.Empty
	}
	return json.Marshal(toSerialize)
}

type NullableWebsiteMetricResult struct {
	value *WebsiteMetricResult
	isSet bool
}

func (v NullableWebsiteMetricResult) Get() *WebsiteMetricResult {
	return v.value
}

func (v *NullableWebsiteMetricResult) Set(val *WebsiteMetricResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteMetricResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteMetricResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteMetricResult(val *WebsiteMetricResult) *NullableWebsiteMetricResult {
	return &NullableWebsiteMetricResult{value: val, isSet: true}
}

func (v NullableWebsiteMetricResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteMetricResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
