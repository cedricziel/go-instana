/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// AgentConfigurationUpdate struct for AgentConfigurationUpdate
type AgentConfigurationUpdate struct {
	RemoteName   *string `json:"remoteName,omitempty"`
	RemoteUri    *string `json:"remoteUri,omitempty"`
	RemoteBranch *string `json:"remoteBranch,omitempty"`
}

// NewAgentConfigurationUpdate instantiates a new AgentConfigurationUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentConfigurationUpdate() *AgentConfigurationUpdate {
	this := AgentConfigurationUpdate{}
	return &this
}

// NewAgentConfigurationUpdateWithDefaults instantiates a new AgentConfigurationUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentConfigurationUpdateWithDefaults() *AgentConfigurationUpdate {
	this := AgentConfigurationUpdate{}
	return &this
}

// GetRemoteName returns the RemoteName field value if set, zero value otherwise.
func (o *AgentConfigurationUpdate) GetRemoteName() string {
	if o == nil || o.RemoteName == nil {
		var ret string
		return ret
	}
	return *o.RemoteName
}

// GetRemoteNameOk returns a tuple with the RemoteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfigurationUpdate) GetRemoteNameOk() (*string, bool) {
	if o == nil || o.RemoteName == nil {
		return nil, false
	}
	return o.RemoteName, true
}

// HasRemoteName returns a boolean if a field has been set.
func (o *AgentConfigurationUpdate) HasRemoteName() bool {
	if o != nil && o.RemoteName != nil {
		return true
	}

	return false
}

// SetRemoteName gets a reference to the given string and assigns it to the RemoteName field.
func (o *AgentConfigurationUpdate) SetRemoteName(v string) {
	o.RemoteName = &v
}

// GetRemoteUri returns the RemoteUri field value if set, zero value otherwise.
func (o *AgentConfigurationUpdate) GetRemoteUri() string {
	if o == nil || o.RemoteUri == nil {
		var ret string
		return ret
	}
	return *o.RemoteUri
}

// GetRemoteUriOk returns a tuple with the RemoteUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfigurationUpdate) GetRemoteUriOk() (*string, bool) {
	if o == nil || o.RemoteUri == nil {
		return nil, false
	}
	return o.RemoteUri, true
}

// HasRemoteUri returns a boolean if a field has been set.
func (o *AgentConfigurationUpdate) HasRemoteUri() bool {
	if o != nil && o.RemoteUri != nil {
		return true
	}

	return false
}

// SetRemoteUri gets a reference to the given string and assigns it to the RemoteUri field.
func (o *AgentConfigurationUpdate) SetRemoteUri(v string) {
	o.RemoteUri = &v
}

// GetRemoteBranch returns the RemoteBranch field value if set, zero value otherwise.
func (o *AgentConfigurationUpdate) GetRemoteBranch() string {
	if o == nil || o.RemoteBranch == nil {
		var ret string
		return ret
	}
	return *o.RemoteBranch
}

// GetRemoteBranchOk returns a tuple with the RemoteBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConfigurationUpdate) GetRemoteBranchOk() (*string, bool) {
	if o == nil || o.RemoteBranch == nil {
		return nil, false
	}
	return o.RemoteBranch, true
}

// HasRemoteBranch returns a boolean if a field has been set.
func (o *AgentConfigurationUpdate) HasRemoteBranch() bool {
	if o != nil && o.RemoteBranch != nil {
		return true
	}

	return false
}

// SetRemoteBranch gets a reference to the given string and assigns it to the RemoteBranch field.
func (o *AgentConfigurationUpdate) SetRemoteBranch(v string) {
	o.RemoteBranch = &v
}

func (o AgentConfigurationUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RemoteName != nil {
		toSerialize["remoteName"] = o.RemoteName
	}
	if o.RemoteUri != nil {
		toSerialize["remoteUri"] = o.RemoteUri
	}
	if o.RemoteBranch != nil {
		toSerialize["remoteBranch"] = o.RemoteBranch
	}
	return json.Marshal(toSerialize)
}

type NullableAgentConfigurationUpdate struct {
	value *AgentConfigurationUpdate
	isSet bool
}

func (v NullableAgentConfigurationUpdate) Get() *AgentConfigurationUpdate {
	return v.value
}

func (v *NullableAgentConfigurationUpdate) Set(val *AgentConfigurationUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentConfigurationUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentConfigurationUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentConfigurationUpdate(val *AgentConfigurationUpdate) *NullableAgentConfigurationUpdate {
	return &NullableAgentConfigurationUpdate{value: val, isSet: true}
}

func (v NullableAgentConfigurationUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentConfigurationUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
