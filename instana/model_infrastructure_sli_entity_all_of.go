/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// InfrastructureSliEntityAllOf struct for InfrastructureSliEntityAllOf
type InfrastructureSliEntityAllOf struct {
	InstanceAggregation *string `json:"instanceAggregation,omitempty"`
	Query               *string `json:"query,omitempty"`
}

// NewInfrastructureSliEntityAllOf instantiates a new InfrastructureSliEntityAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfrastructureSliEntityAllOf() *InfrastructureSliEntityAllOf {
	this := InfrastructureSliEntityAllOf{}
	return &this
}

// NewInfrastructureSliEntityAllOfWithDefaults instantiates a new InfrastructureSliEntityAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfrastructureSliEntityAllOfWithDefaults() *InfrastructureSliEntityAllOf {
	this := InfrastructureSliEntityAllOf{}
	return &this
}

// GetInstanceAggregation returns the InstanceAggregation field value if set, zero value otherwise.
func (o *InfrastructureSliEntityAllOf) GetInstanceAggregation() string {
	if o == nil || o.InstanceAggregation == nil {
		var ret string
		return ret
	}
	return *o.InstanceAggregation
}

// GetInstanceAggregationOk returns a tuple with the InstanceAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfrastructureSliEntityAllOf) GetInstanceAggregationOk() (*string, bool) {
	if o == nil || o.InstanceAggregation == nil {
		return nil, false
	}
	return o.InstanceAggregation, true
}

// HasInstanceAggregation returns a boolean if a field has been set.
func (o *InfrastructureSliEntityAllOf) HasInstanceAggregation() bool {
	if o != nil && o.InstanceAggregation != nil {
		return true
	}

	return false
}

// SetInstanceAggregation gets a reference to the given string and assigns it to the InstanceAggregation field.
func (o *InfrastructureSliEntityAllOf) SetInstanceAggregation(v string) {
	o.InstanceAggregation = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *InfrastructureSliEntityAllOf) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfrastructureSliEntityAllOf) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *InfrastructureSliEntityAllOf) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *InfrastructureSliEntityAllOf) SetQuery(v string) {
	o.Query = &v
}

func (o InfrastructureSliEntityAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstanceAggregation != nil {
		toSerialize["instanceAggregation"] = o.InstanceAggregation
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	return json.Marshal(toSerialize)
}

type NullableInfrastructureSliEntityAllOf struct {
	value *InfrastructureSliEntityAllOf
	isSet bool
}

func (v NullableInfrastructureSliEntityAllOf) Get() *InfrastructureSliEntityAllOf {
	return v.value
}

func (v *NullableInfrastructureSliEntityAllOf) Set(val *InfrastructureSliEntityAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInfrastructureSliEntityAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInfrastructureSliEntityAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfrastructureSliEntityAllOf(val *InfrastructureSliEntityAllOf) *NullableInfrastructureSliEntityAllOf {
	return &NullableInfrastructureSliEntityAllOf{value: val, isSet: true}
}

func (v NullableInfrastructureSliEntityAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfrastructureSliEntityAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
