/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// WebhookIntegrationAllOf struct for WebhookIntegrationAllOf
type WebhookIntegrationAllOf struct {
	WebhookUrls *[]string `json:"webhookUrls,omitempty"`
	Headers     *[]string `json:"headers,omitempty"`
}

// NewWebhookIntegrationAllOf instantiates a new WebhookIntegrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookIntegrationAllOf() *WebhookIntegrationAllOf {
	this := WebhookIntegrationAllOf{}
	return &this
}

// NewWebhookIntegrationAllOfWithDefaults instantiates a new WebhookIntegrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookIntegrationAllOfWithDefaults() *WebhookIntegrationAllOf {
	this := WebhookIntegrationAllOf{}
	return &this
}

// GetWebhookUrls returns the WebhookUrls field value if set, zero value otherwise.
func (o *WebhookIntegrationAllOf) GetWebhookUrls() []string {
	if o == nil || o.WebhookUrls == nil {
		var ret []string
		return ret
	}
	return *o.WebhookUrls
}

// GetWebhookUrlsOk returns a tuple with the WebhookUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegrationAllOf) GetWebhookUrlsOk() (*[]string, bool) {
	if o == nil || o.WebhookUrls == nil {
		return nil, false
	}
	return o.WebhookUrls, true
}

// HasWebhookUrls returns a boolean if a field has been set.
func (o *WebhookIntegrationAllOf) HasWebhookUrls() bool {
	if o != nil && o.WebhookUrls != nil {
		return true
	}

	return false
}

// SetWebhookUrls gets a reference to the given []string and assigns it to the WebhookUrls field.
func (o *WebhookIntegrationAllOf) SetWebhookUrls(v []string) {
	o.WebhookUrls = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *WebhookIntegrationAllOf) GetHeaders() []string {
	if o == nil || o.Headers == nil {
		var ret []string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegrationAllOf) GetHeadersOk() (*[]string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *WebhookIntegrationAllOf) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []string and assigns it to the Headers field.
func (o *WebhookIntegrationAllOf) SetHeaders(v []string) {
	o.Headers = &v
}

func (o WebhookIntegrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WebhookUrls != nil {
		toSerialize["webhookUrls"] = o.WebhookUrls
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookIntegrationAllOf struct {
	value *WebhookIntegrationAllOf
	isSet bool
}

func (v NullableWebhookIntegrationAllOf) Get() *WebhookIntegrationAllOf {
	return v.value
}

func (v *NullableWebhookIntegrationAllOf) Set(val *WebhookIntegrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookIntegrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookIntegrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookIntegrationAllOf(val *WebhookIntegrationAllOf) *NullableWebhookIntegrationAllOf {
	return &NullableWebhookIntegrationAllOf{value: val, isSet: true}
}

func (v NullableWebhookIntegrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookIntegrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
