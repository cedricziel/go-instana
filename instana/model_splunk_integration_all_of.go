/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SplunkIntegrationAllOf struct for SplunkIntegrationAllOf
type SplunkIntegrationAllOf struct {
	Url   *string `json:"url,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewSplunkIntegrationAllOf instantiates a new SplunkIntegrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplunkIntegrationAllOf() *SplunkIntegrationAllOf {
	this := SplunkIntegrationAllOf{}
	return &this
}

// NewSplunkIntegrationAllOfWithDefaults instantiates a new SplunkIntegrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplunkIntegrationAllOfWithDefaults() *SplunkIntegrationAllOf {
	this := SplunkIntegrationAllOf{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SplunkIntegrationAllOf) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkIntegrationAllOf) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SplunkIntegrationAllOf) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SplunkIntegrationAllOf) SetUrl(v string) {
	o.Url = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SplunkIntegrationAllOf) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplunkIntegrationAllOf) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SplunkIntegrationAllOf) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SplunkIntegrationAllOf) SetToken(v string) {
	o.Token = &v
}

func (o SplunkIntegrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSplunkIntegrationAllOf struct {
	value *SplunkIntegrationAllOf
	isSet bool
}

func (v NullableSplunkIntegrationAllOf) Get() *SplunkIntegrationAllOf {
	return v.value
}

func (v *NullableSplunkIntegrationAllOf) Set(val *SplunkIntegrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSplunkIntegrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSplunkIntegrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplunkIntegrationAllOf(val *SplunkIntegrationAllOf) *NullableSplunkIntegrationAllOf {
	return &NullableSplunkIntegrationAllOf{value: val, isSet: true}
}

func (v NullableSplunkIntegrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplunkIntegrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
