/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SyntheticCallRule struct for SyntheticCallRule
type SyntheticCallRule struct {
	Name               string             `json:"name"`
	Description        *string            `json:"description,omitempty"`
	MatchSpecification MatchExpressionDTO `json:"matchSpecification"`
	Enabled            *bool              `json:"enabled,omitempty"`
}

// NewSyntheticCallRule instantiates a new SyntheticCallRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyntheticCallRule(name string, matchSpecification MatchExpressionDTO) *SyntheticCallRule {
	this := SyntheticCallRule{}
	this.Name = name
	this.MatchSpecification = matchSpecification
	return &this
}

// NewSyntheticCallRuleWithDefaults instantiates a new SyntheticCallRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyntheticCallRuleWithDefaults() *SyntheticCallRule {
	this := SyntheticCallRule{}
	return &this
}

// GetName returns the Name field value
func (o *SyntheticCallRule) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SyntheticCallRule) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SyntheticCallRule) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SyntheticCallRule) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticCallRule) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SyntheticCallRule) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SyntheticCallRule) SetDescription(v string) {
	o.Description = &v
}

// GetMatchSpecification returns the MatchSpecification field value
func (o *SyntheticCallRule) GetMatchSpecification() MatchExpressionDTO {
	if o == nil {
		var ret MatchExpressionDTO
		return ret
	}

	return o.MatchSpecification
}

// GetMatchSpecificationOk returns a tuple with the MatchSpecification field value
// and a boolean to check if the value has been set.
func (o *SyntheticCallRule) GetMatchSpecificationOk() (*MatchExpressionDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatchSpecification, true
}

// SetMatchSpecification sets field value
func (o *SyntheticCallRule) SetMatchSpecification(v MatchExpressionDTO) {
	o.MatchSpecification = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SyntheticCallRule) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyntheticCallRule) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SyntheticCallRule) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SyntheticCallRule) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o SyntheticCallRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["matchSpecification"] = o.MatchSpecification
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableSyntheticCallRule struct {
	value *SyntheticCallRule
	isSet bool
}

func (v NullableSyntheticCallRule) Get() *SyntheticCallRule {
	return v.value
}

func (v *NullableSyntheticCallRule) Set(val *SyntheticCallRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSyntheticCallRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSyntheticCallRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyntheticCallRule(val *SyntheticCallRule) *NullableSyntheticCallRule {
	return &NullableSyntheticCallRule{value: val, isSet: true}
}

func (v NullableSyntheticCallRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyntheticCallRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
