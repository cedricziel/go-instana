/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SliEntity struct for SliEntity
type SliEntity struct {
	SliType string `json:"sliType"`
}

// NewSliEntity instantiates a new SliEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSliEntity(sliType string) *SliEntity {
	this := SliEntity{}
	this.SliType = sliType
	return &this
}

// NewSliEntityWithDefaults instantiates a new SliEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSliEntityWithDefaults() *SliEntity {
	this := SliEntity{}
	return &this
}

// GetSliType returns the SliType field value
func (o *SliEntity) GetSliType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SliType
}

// GetSliTypeOk returns a tuple with the SliType field value
// and a boolean to check if the value has been set.
func (o *SliEntity) GetSliTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SliType, true
}

// SetSliType sets field value
func (o *SliEntity) SetSliType(v string) {
	o.SliType = v
}

func (o SliEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sliType"] = o.SliType
	}
	return json.Marshal(toSerialize)
}

type NullableSliEntity struct {
	value *SliEntity
	isSet bool
}

func (v NullableSliEntity) Get() *SliEntity {
	return v.value
}

func (v *NullableSliEntity) Set(val *SliEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableSliEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableSliEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSliEntity(val *SliEntity) *NullableSliEntity {
	return &NullableSliEntity{value: val, isSet: true}
}

func (v NullableSliEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSliEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
