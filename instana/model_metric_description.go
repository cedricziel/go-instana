/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// MetricDescription struct for MetricDescription
type MetricDescription struct {
	MetricId     *string   `json:"metricId,omitempty"`
	Label        *string   `json:"label,omitempty"`
	Formatter    *string   `json:"formatter,omitempty"`
	Description  *string   `json:"description,omitempty"`
	Aggregations *[]string `json:"aggregations,omitempty"`
}

// NewMetricDescription instantiates a new MetricDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricDescription() *MetricDescription {
	this := MetricDescription{}
	return &this
}

// NewMetricDescriptionWithDefaults instantiates a new MetricDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricDescriptionWithDefaults() *MetricDescription {
	this := MetricDescription{}
	return &this
}

// GetMetricId returns the MetricId field value if set, zero value otherwise.
func (o *MetricDescription) GetMetricId() string {
	if o == nil || o.MetricId == nil {
		var ret string
		return ret
	}
	return *o.MetricId
}

// GetMetricIdOk returns a tuple with the MetricId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDescription) GetMetricIdOk() (*string, bool) {
	if o == nil || o.MetricId == nil {
		return nil, false
	}
	return o.MetricId, true
}

// HasMetricId returns a boolean if a field has been set.
func (o *MetricDescription) HasMetricId() bool {
	if o != nil && o.MetricId != nil {
		return true
	}

	return false
}

// SetMetricId gets a reference to the given string and assigns it to the MetricId field.
func (o *MetricDescription) SetMetricId(v string) {
	o.MetricId = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *MetricDescription) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDescription) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *MetricDescription) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *MetricDescription) SetLabel(v string) {
	o.Label = &v
}

// GetFormatter returns the Formatter field value if set, zero value otherwise.
func (o *MetricDescription) GetFormatter() string {
	if o == nil || o.Formatter == nil {
		var ret string
		return ret
	}
	return *o.Formatter
}

// GetFormatterOk returns a tuple with the Formatter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDescription) GetFormatterOk() (*string, bool) {
	if o == nil || o.Formatter == nil {
		return nil, false
	}
	return o.Formatter, true
}

// HasFormatter returns a boolean if a field has been set.
func (o *MetricDescription) HasFormatter() bool {
	if o != nil && o.Formatter != nil {
		return true
	}

	return false
}

// SetFormatter gets a reference to the given string and assigns it to the Formatter field.
func (o *MetricDescription) SetFormatter(v string) {
	o.Formatter = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MetricDescription) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDescription) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MetricDescription) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MetricDescription) SetDescription(v string) {
	o.Description = &v
}

// GetAggregations returns the Aggregations field value if set, zero value otherwise.
func (o *MetricDescription) GetAggregations() []string {
	if o == nil || o.Aggregations == nil {
		var ret []string
		return ret
	}
	return *o.Aggregations
}

// GetAggregationsOk returns a tuple with the Aggregations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricDescription) GetAggregationsOk() (*[]string, bool) {
	if o == nil || o.Aggregations == nil {
		return nil, false
	}
	return o.Aggregations, true
}

// HasAggregations returns a boolean if a field has been set.
func (o *MetricDescription) HasAggregations() bool {
	if o != nil && o.Aggregations != nil {
		return true
	}

	return false
}

// SetAggregations gets a reference to the given []string and assigns it to the Aggregations field.
func (o *MetricDescription) SetAggregations(v []string) {
	o.Aggregations = &v
}

func (o MetricDescription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MetricId != nil {
		toSerialize["metricId"] = o.MetricId
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Formatter != nil {
		toSerialize["formatter"] = o.Formatter
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Aggregations != nil {
		toSerialize["aggregations"] = o.Aggregations
	}
	return json.Marshal(toSerialize)
}

type NullableMetricDescription struct {
	value *MetricDescription
	isSet bool
}

func (v NullableMetricDescription) Get() *MetricDescription {
	return v.value
}

func (v *NullableMetricDescription) Set(val *MetricDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDescription(val *MetricDescription) *NullableMetricDescription {
	return &NullableMetricDescription{value: val, isSet: true}
}

func (v NullableMetricDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
