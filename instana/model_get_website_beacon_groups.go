/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// GetWebsiteBeaconGroups struct for GetWebsiteBeaconGroups
type GetWebsiteBeaconGroups struct {
	Pagination *CursorPagination                       `json:"pagination,omitempty"`
	TimeFrame  *TimeFrame                              `json:"timeFrame,omitempty"`
	Group      WebsiteBeaconTagGroup                   `json:"group"`
	Order      *Order                                  `json:"order,omitempty"`
	Type       string                                  `json:"type"`
	TagFilters *[]TagFilter                            `json:"tagFilters,omitempty"`
	Metrics    []WebsiteMonitoringMetricsConfiguration `json:"metrics"`
}

// NewGetWebsiteBeaconGroups instantiates a new GetWebsiteBeaconGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWebsiteBeaconGroups(group WebsiteBeaconTagGroup, type_ string, metrics []WebsiteMonitoringMetricsConfiguration) *GetWebsiteBeaconGroups {
	this := GetWebsiteBeaconGroups{}
	this.Group = group
	this.Type = type_
	this.Metrics = metrics
	return &this
}

// NewGetWebsiteBeaconGroupsWithDefaults instantiates a new GetWebsiteBeaconGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWebsiteBeaconGroupsWithDefaults() *GetWebsiteBeaconGroups {
	this := GetWebsiteBeaconGroups{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GetWebsiteBeaconGroups) GetPagination() CursorPagination {
	if o == nil || o.Pagination == nil {
		var ret CursorPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWebsiteBeaconGroups) GetPaginationOk() (*CursorPagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GetWebsiteBeaconGroups) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given CursorPagination and assigns it to the Pagination field.
func (o *GetWebsiteBeaconGroups) SetPagination(v CursorPagination) {
	o.Pagination = &v
}

// GetTimeFrame returns the TimeFrame field value if set, zero value otherwise.
func (o *GetWebsiteBeaconGroups) GetTimeFrame() TimeFrame {
	if o == nil || o.TimeFrame == nil {
		var ret TimeFrame
		return ret
	}
	return *o.TimeFrame
}

// GetTimeFrameOk returns a tuple with the TimeFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWebsiteBeaconGroups) GetTimeFrameOk() (*TimeFrame, bool) {
	if o == nil || o.TimeFrame == nil {
		return nil, false
	}
	return o.TimeFrame, true
}

// HasTimeFrame returns a boolean if a field has been set.
func (o *GetWebsiteBeaconGroups) HasTimeFrame() bool {
	if o != nil && o.TimeFrame != nil {
		return true
	}

	return false
}

// SetTimeFrame gets a reference to the given TimeFrame and assigns it to the TimeFrame field.
func (o *GetWebsiteBeaconGroups) SetTimeFrame(v TimeFrame) {
	o.TimeFrame = &v
}

// GetGroup returns the Group field value
func (o *GetWebsiteBeaconGroups) GetGroup() WebsiteBeaconTagGroup {
	if o == nil {
		var ret WebsiteBeaconTagGroup
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *GetWebsiteBeaconGroups) GetGroupOk() (*WebsiteBeaconTagGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *GetWebsiteBeaconGroups) SetGroup(v WebsiteBeaconTagGroup) {
	o.Group = v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *GetWebsiteBeaconGroups) GetOrder() Order {
	if o == nil || o.Order == nil {
		var ret Order
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWebsiteBeaconGroups) GetOrderOk() (*Order, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *GetWebsiteBeaconGroups) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given Order and assigns it to the Order field.
func (o *GetWebsiteBeaconGroups) SetOrder(v Order) {
	o.Order = &v
}

// GetType returns the Type field value
func (o *GetWebsiteBeaconGroups) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetWebsiteBeaconGroups) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetWebsiteBeaconGroups) SetType(v string) {
	o.Type = v
}

// GetTagFilters returns the TagFilters field value if set, zero value otherwise.
func (o *GetWebsiteBeaconGroups) GetTagFilters() []TagFilter {
	if o == nil || o.TagFilters == nil {
		var ret []TagFilter
		return ret
	}
	return *o.TagFilters
}

// GetTagFiltersOk returns a tuple with the TagFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWebsiteBeaconGroups) GetTagFiltersOk() (*[]TagFilter, bool) {
	if o == nil || o.TagFilters == nil {
		return nil, false
	}
	return o.TagFilters, true
}

// HasTagFilters returns a boolean if a field has been set.
func (o *GetWebsiteBeaconGroups) HasTagFilters() bool {
	if o != nil && o.TagFilters != nil {
		return true
	}

	return false
}

// SetTagFilters gets a reference to the given []TagFilter and assigns it to the TagFilters field.
func (o *GetWebsiteBeaconGroups) SetTagFilters(v []TagFilter) {
	o.TagFilters = &v
}

// GetMetrics returns the Metrics field value
func (o *GetWebsiteBeaconGroups) GetMetrics() []WebsiteMonitoringMetricsConfiguration {
	if o == nil {
		var ret []WebsiteMonitoringMetricsConfiguration
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *GetWebsiteBeaconGroups) GetMetricsOk() (*[]WebsiteMonitoringMetricsConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *GetWebsiteBeaconGroups) SetMetrics(v []WebsiteMonitoringMetricsConfiguration) {
	o.Metrics = v
}

func (o GetWebsiteBeaconGroups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	if o.TimeFrame != nil {
		toSerialize["timeFrame"] = o.TimeFrame
	}
	if true {
		toSerialize["group"] = o.Group
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.TagFilters != nil {
		toSerialize["tagFilters"] = o.TagFilters
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableGetWebsiteBeaconGroups struct {
	value *GetWebsiteBeaconGroups
	isSet bool
}

func (v NullableGetWebsiteBeaconGroups) Get() *GetWebsiteBeaconGroups {
	return v.value
}

func (v *NullableGetWebsiteBeaconGroups) Set(val *GetWebsiteBeaconGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWebsiteBeaconGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWebsiteBeaconGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWebsiteBeaconGroups(val *GetWebsiteBeaconGroups) *NullableGetWebsiteBeaconGroups {
	return &NullableGetWebsiteBeaconGroups{value: val, isSet: true}
}

func (v NullableGetWebsiteBeaconGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWebsiteBeaconGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
