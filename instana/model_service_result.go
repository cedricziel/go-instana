/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ServiceResult struct for ServiceResult
type ServiceResult struct {
	Items     *[]Service `json:"items,omitempty"`
	Page      *int32     `json:"page,omitempty"`
	PageSize  *int32     `json:"pageSize,omitempty"`
	TotalHits *int32     `json:"totalHits,omitempty"`
}

// NewServiceResult instantiates a new ServiceResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceResult() *ServiceResult {
	this := ServiceResult{}
	return &this
}

// NewServiceResultWithDefaults instantiates a new ServiceResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceResultWithDefaults() *ServiceResult {
	this := ServiceResult{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ServiceResult) GetItems() []Service {
	if o == nil || o.Items == nil {
		var ret []Service
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceResult) GetItemsOk() (*[]Service, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ServiceResult) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Service and assigns it to the Items field.
func (o *ServiceResult) SetItems(v []Service) {
	o.Items = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *ServiceResult) GetPage() int32 {
	if o == nil || o.Page == nil {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceResult) GetPageOk() (*int32, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *ServiceResult) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *ServiceResult) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ServiceResult) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceResult) GetPageSizeOk() (*int32, bool) {
	if o == nil || o.PageSize == nil {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ServiceResult) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *ServiceResult) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetTotalHits returns the TotalHits field value if set, zero value otherwise.
func (o *ServiceResult) GetTotalHits() int32 {
	if o == nil || o.TotalHits == nil {
		var ret int32
		return ret
	}
	return *o.TotalHits
}

// GetTotalHitsOk returns a tuple with the TotalHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceResult) GetTotalHitsOk() (*int32, bool) {
	if o == nil || o.TotalHits == nil {
		return nil, false
	}
	return o.TotalHits, true
}

// HasTotalHits returns a boolean if a field has been set.
func (o *ServiceResult) HasTotalHits() bool {
	if o != nil && o.TotalHits != nil {
		return true
	}

	return false
}

// SetTotalHits gets a reference to the given int32 and assigns it to the TotalHits field.
func (o *ServiceResult) SetTotalHits(v int32) {
	o.TotalHits = &v
}

func (o ServiceResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	if o.PageSize != nil {
		toSerialize["pageSize"] = o.PageSize
	}
	if o.TotalHits != nil {
		toSerialize["totalHits"] = o.TotalHits
	}
	return json.Marshal(toSerialize)
}

type NullableServiceResult struct {
	value *ServiceResult
	isSet bool
}

func (v NullableServiceResult) Get() *ServiceResult {
	return v.value
}

func (v *NullableServiceResult) Set(val *ServiceResult) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceResult) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceResult(val *ServiceResult) *NullableServiceResult {
	return &NullableServiceResult{value: val, isSet: true}
}

func (v NullableServiceResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
