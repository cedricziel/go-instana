/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// Website struct for Website
type Website struct {
	Id      string  `json:"id"`
	AppName *string `json:"appName,omitempty"`
	Name    string  `json:"name"`
}

// NewWebsite instantiates a new Website object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsite(id string, name string) *Website {
	this := Website{}
	this.Id = id
	this.Name = name
	return &this
}

// NewWebsiteWithDefaults instantiates a new Website object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteWithDefaults() *Website {
	this := Website{}
	return &this
}

// GetId returns the Id field value
func (o *Website) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Website) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Website) SetId(v string) {
	o.Id = v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *Website) GetAppName() string {
	if o == nil || o.AppName == nil {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Website) GetAppNameOk() (*string, bool) {
	if o == nil || o.AppName == nil {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *Website) HasAppName() bool {
	if o != nil && o.AppName != nil {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *Website) SetAppName(v string) {
	o.AppName = &v
}

// GetName returns the Name field value
func (o *Website) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Website) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Website) SetName(v string) {
	o.Name = v
}

func (o Website) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.AppName != nil {
		toSerialize["appName"] = o.AppName
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableWebsite struct {
	value *Website
	isSet bool
}

func (v NullableWebsite) Get() *Website {
	return v.value
}

func (v *NullableWebsite) Set(val *Website) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsite) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsite(val *Website) *NullableWebsite {
	return &NullableWebsite{value: val, isSet: true}
}

func (v NullableWebsite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
