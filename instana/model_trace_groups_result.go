/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// TraceGroupsResult struct for TraceGroupsResult
type TraceGroupsResult struct {
	Items                     []TraceGroupsItem `json:"items"`
	CanLoadMore               *bool             `json:"canLoadMore,omitempty"`
	TotalHits                 *int64            `json:"totalHits,omitempty"`
	TotalRepresentedItemCount *int64            `json:"totalRepresentedItemCount,omitempty"`
}

// NewTraceGroupsResult instantiates a new TraceGroupsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTraceGroupsResult(items []TraceGroupsItem) *TraceGroupsResult {
	this := TraceGroupsResult{}
	this.Items = items
	return &this
}

// NewTraceGroupsResultWithDefaults instantiates a new TraceGroupsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTraceGroupsResultWithDefaults() *TraceGroupsResult {
	this := TraceGroupsResult{}
	return &this
}

// GetItems returns the Items field value
func (o *TraceGroupsResult) GetItems() []TraceGroupsItem {
	if o == nil {
		var ret []TraceGroupsItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *TraceGroupsResult) GetItemsOk() (*[]TraceGroupsItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *TraceGroupsResult) SetItems(v []TraceGroupsItem) {
	o.Items = v
}

// GetCanLoadMore returns the CanLoadMore field value if set, zero value otherwise.
func (o *TraceGroupsResult) GetCanLoadMore() bool {
	if o == nil || o.CanLoadMore == nil {
		var ret bool
		return ret
	}
	return *o.CanLoadMore
}

// GetCanLoadMoreOk returns a tuple with the CanLoadMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceGroupsResult) GetCanLoadMoreOk() (*bool, bool) {
	if o == nil || o.CanLoadMore == nil {
		return nil, false
	}
	return o.CanLoadMore, true
}

// HasCanLoadMore returns a boolean if a field has been set.
func (o *TraceGroupsResult) HasCanLoadMore() bool {
	if o != nil && o.CanLoadMore != nil {
		return true
	}

	return false
}

// SetCanLoadMore gets a reference to the given bool and assigns it to the CanLoadMore field.
func (o *TraceGroupsResult) SetCanLoadMore(v bool) {
	o.CanLoadMore = &v
}

// GetTotalHits returns the TotalHits field value if set, zero value otherwise.
func (o *TraceGroupsResult) GetTotalHits() int64 {
	if o == nil || o.TotalHits == nil {
		var ret int64
		return ret
	}
	return *o.TotalHits
}

// GetTotalHitsOk returns a tuple with the TotalHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceGroupsResult) GetTotalHitsOk() (*int64, bool) {
	if o == nil || o.TotalHits == nil {
		return nil, false
	}
	return o.TotalHits, true
}

// HasTotalHits returns a boolean if a field has been set.
func (o *TraceGroupsResult) HasTotalHits() bool {
	if o != nil && o.TotalHits != nil {
		return true
	}

	return false
}

// SetTotalHits gets a reference to the given int64 and assigns it to the TotalHits field.
func (o *TraceGroupsResult) SetTotalHits(v int64) {
	o.TotalHits = &v
}

// GetTotalRepresentedItemCount returns the TotalRepresentedItemCount field value if set, zero value otherwise.
func (o *TraceGroupsResult) GetTotalRepresentedItemCount() int64 {
	if o == nil || o.TotalRepresentedItemCount == nil {
		var ret int64
		return ret
	}
	return *o.TotalRepresentedItemCount
}

// GetTotalRepresentedItemCountOk returns a tuple with the TotalRepresentedItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TraceGroupsResult) GetTotalRepresentedItemCountOk() (*int64, bool) {
	if o == nil || o.TotalRepresentedItemCount == nil {
		return nil, false
	}
	return o.TotalRepresentedItemCount, true
}

// HasTotalRepresentedItemCount returns a boolean if a field has been set.
func (o *TraceGroupsResult) HasTotalRepresentedItemCount() bool {
	if o != nil && o.TotalRepresentedItemCount != nil {
		return true
	}

	return false
}

// SetTotalRepresentedItemCount gets a reference to the given int64 and assigns it to the TotalRepresentedItemCount field.
func (o *TraceGroupsResult) SetTotalRepresentedItemCount(v int64) {
	o.TotalRepresentedItemCount = &v
}

func (o TraceGroupsResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if o.CanLoadMore != nil {
		toSerialize["canLoadMore"] = o.CanLoadMore
	}
	if o.TotalHits != nil {
		toSerialize["totalHits"] = o.TotalHits
	}
	if o.TotalRepresentedItemCount != nil {
		toSerialize["totalRepresentedItemCount"] = o.TotalRepresentedItemCount
	}
	return json.Marshal(toSerialize)
}

type NullableTraceGroupsResult struct {
	value *TraceGroupsResult
	isSet bool
}

func (v NullableTraceGroupsResult) Get() *TraceGroupsResult {
	return v.value
}

func (v *NullableTraceGroupsResult) Set(val *TraceGroupsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTraceGroupsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTraceGroupsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTraceGroupsResult(val *TraceGroupsResult) *NullableTraceGroupsResult {
	return &NullableTraceGroupsResult{value: val, isSet: true}
}

func (v NullableTraceGroupsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTraceGroupsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
