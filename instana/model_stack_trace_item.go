/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// StackTraceItem struct for StackTraceItem
type StackTraceItem struct {
	File   *string `json:"file,omitempty"`
	Method *string `json:"method,omitempty"`
	Line   *string `json:"line,omitempty"`
}

// NewStackTraceItem instantiates a new StackTraceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackTraceItem() *StackTraceItem {
	this := StackTraceItem{}
	return &this
}

// NewStackTraceItemWithDefaults instantiates a new StackTraceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackTraceItemWithDefaults() *StackTraceItem {
	this := StackTraceItem{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *StackTraceItem) GetFile() string {
	if o == nil || o.File == nil {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceItem) GetFileOk() (*string, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *StackTraceItem) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *StackTraceItem) SetFile(v string) {
	o.File = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *StackTraceItem) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceItem) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *StackTraceItem) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *StackTraceItem) SetMethod(v string) {
	o.Method = &v
}

// GetLine returns the Line field value if set, zero value otherwise.
func (o *StackTraceItem) GetLine() string {
	if o == nil || o.Line == nil {
		var ret string
		return ret
	}
	return *o.Line
}

// GetLineOk returns a tuple with the Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceItem) GetLineOk() (*string, bool) {
	if o == nil || o.Line == nil {
		return nil, false
	}
	return o.Line, true
}

// HasLine returns a boolean if a field has been set.
func (o *StackTraceItem) HasLine() bool {
	if o != nil && o.Line != nil {
		return true
	}

	return false
}

// SetLine gets a reference to the given string and assigns it to the Line field.
func (o *StackTraceItem) SetLine(v string) {
	o.Line = &v
}

func (o StackTraceItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Line != nil {
		toSerialize["line"] = o.Line
	}
	return json.Marshal(toSerialize)
}

type NullableStackTraceItem struct {
	value *StackTraceItem
	isSet bool
}

func (v NullableStackTraceItem) Get() *StackTraceItem {
	return v.value
}

func (v *NullableStackTraceItem) Set(val *StackTraceItem) {
	v.value = val
	v.isSet = true
}

func (v NullableStackTraceItem) IsSet() bool {
	return v.isSet
}

func (v *NullableStackTraceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackTraceItem(val *StackTraceItem) *NullableStackTraceItem {
	return &NullableStackTraceItem{value: val, isSet: true}
}

func (v NullableStackTraceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackTraceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
