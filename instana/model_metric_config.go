/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// MetricConfig struct for MetricConfig
type MetricConfig struct {
	Metric      string `json:"metric"`
	Granularity *int32 `json:"granularity,omitempty"`
	Aggregation string `json:"aggregation"`
}

// NewMetricConfig instantiates a new MetricConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricConfig(metric string, aggregation string) *MetricConfig {
	this := MetricConfig{}
	this.Metric = metric
	this.Aggregation = aggregation
	return &this
}

// NewMetricConfigWithDefaults instantiates a new MetricConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricConfigWithDefaults() *MetricConfig {
	this := MetricConfig{}
	return &this
}

// GetMetric returns the Metric field value
func (o *MetricConfig) GetMetric() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metric
}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
func (o *MetricConfig) GetMetricOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metric, true
}

// SetMetric sets field value
func (o *MetricConfig) SetMetric(v string) {
	o.Metric = v
}

// GetGranularity returns the Granularity field value if set, zero value otherwise.
func (o *MetricConfig) GetGranularity() int32 {
	if o == nil || o.Granularity == nil {
		var ret int32
		return ret
	}
	return *o.Granularity
}

// GetGranularityOk returns a tuple with the Granularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricConfig) GetGranularityOk() (*int32, bool) {
	if o == nil || o.Granularity == nil {
		return nil, false
	}
	return o.Granularity, true
}

// HasGranularity returns a boolean if a field has been set.
func (o *MetricConfig) HasGranularity() bool {
	if o != nil && o.Granularity != nil {
		return true
	}

	return false
}

// SetGranularity gets a reference to the given int32 and assigns it to the Granularity field.
func (o *MetricConfig) SetGranularity(v int32) {
	o.Granularity = &v
}

// GetAggregation returns the Aggregation field value
func (o *MetricConfig) GetAggregation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value
// and a boolean to check if the value has been set.
func (o *MetricConfig) GetAggregationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregation, true
}

// SetAggregation sets field value
func (o *MetricConfig) SetAggregation(v string) {
	o.Aggregation = v
}

func (o MetricConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metric"] = o.Metric
	}
	if o.Granularity != nil {
		toSerialize["granularity"] = o.Granularity
	}
	if true {
		toSerialize["aggregation"] = o.Aggregation
	}
	return json.Marshal(toSerialize)
}

type NullableMetricConfig struct {
	value *MetricConfig
	isSet bool
}

func (v NullableMetricConfig) Get() *MetricConfig {
	return v.value
}

func (v *NullableMetricConfig) Set(val *MetricConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricConfig(val *MetricConfig) *NullableMetricConfig {
	return &NullableMetricConfig{value: val, isSet: true}
}

func (v NullableMetricConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
