/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SlownessWebsiteAlertRule struct for SlownessWebsiteAlertRule
type SlownessWebsiteAlertRule struct {
	WebsiteAlertRule
	Aggregation string `json:"aggregation"`
}

// NewSlownessWebsiteAlertRule instantiates a new SlownessWebsiteAlertRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlownessWebsiteAlertRule(aggregation string) *SlownessWebsiteAlertRule {
	this := SlownessWebsiteAlertRule{}
	this.Aggregation = aggregation
	return &this
}

// NewSlownessWebsiteAlertRuleWithDefaults instantiates a new SlownessWebsiteAlertRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlownessWebsiteAlertRuleWithDefaults() *SlownessWebsiteAlertRule {
	this := SlownessWebsiteAlertRule{}
	return &this
}

// GetAggregation returns the Aggregation field value
func (o *SlownessWebsiteAlertRule) GetAggregation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value
// and a boolean to check if the value has been set.
func (o *SlownessWebsiteAlertRule) GetAggregationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregation, true
}

// SetAggregation sets field value
func (o *SlownessWebsiteAlertRule) SetAggregation(v string) {
	o.Aggregation = v
}

func (o SlownessWebsiteAlertRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedWebsiteAlertRule, errWebsiteAlertRule := json.Marshal(o.WebsiteAlertRule)
	if errWebsiteAlertRule != nil {
		return []byte{}, errWebsiteAlertRule
	}
	errWebsiteAlertRule = json.Unmarshal([]byte(serializedWebsiteAlertRule), &toSerialize)
	if errWebsiteAlertRule != nil {
		return []byte{}, errWebsiteAlertRule
	}
	if true {
		toSerialize["aggregation"] = o.Aggregation
	}
	return json.Marshal(toSerialize)
}

type NullableSlownessWebsiteAlertRule struct {
	value *SlownessWebsiteAlertRule
	isSet bool
}

func (v NullableSlownessWebsiteAlertRule) Get() *SlownessWebsiteAlertRule {
	return v.value
}

func (v *NullableSlownessWebsiteAlertRule) Set(val *SlownessWebsiteAlertRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSlownessWebsiteAlertRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSlownessWebsiteAlertRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlownessWebsiteAlertRule(val *SlownessWebsiteAlertRule) *NullableSlownessWebsiteAlertRule {
	return &NullableSlownessWebsiteAlertRule{value: val, isSet: true}
}

func (v NullableSlownessWebsiteAlertRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlownessWebsiteAlertRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
