/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// FullTrace struct for FullTrace
type FullTrace struct {
	Id              string `json:"id"`
	TotalErrorCount *int32 `json:"totalErrorCount,omitempty"`
	RootSpan        Span   `json:"rootSpan"`
}

// NewFullTrace instantiates a new FullTrace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullTrace(id string, rootSpan Span) *FullTrace {
	this := FullTrace{}
	this.Id = id
	this.RootSpan = rootSpan
	return &this
}

// NewFullTraceWithDefaults instantiates a new FullTrace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullTraceWithDefaults() *FullTrace {
	this := FullTrace{}
	return &this
}

// GetId returns the Id field value
func (o *FullTrace) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FullTrace) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FullTrace) SetId(v string) {
	o.Id = v
}

// GetTotalErrorCount returns the TotalErrorCount field value if set, zero value otherwise.
func (o *FullTrace) GetTotalErrorCount() int32 {
	if o == nil || o.TotalErrorCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalErrorCount
}

// GetTotalErrorCountOk returns a tuple with the TotalErrorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullTrace) GetTotalErrorCountOk() (*int32, bool) {
	if o == nil || o.TotalErrorCount == nil {
		return nil, false
	}
	return o.TotalErrorCount, true
}

// HasTotalErrorCount returns a boolean if a field has been set.
func (o *FullTrace) HasTotalErrorCount() bool {
	if o != nil && o.TotalErrorCount != nil {
		return true
	}

	return false
}

// SetTotalErrorCount gets a reference to the given int32 and assigns it to the TotalErrorCount field.
func (o *FullTrace) SetTotalErrorCount(v int32) {
	o.TotalErrorCount = &v
}

// GetRootSpan returns the RootSpan field value
func (o *FullTrace) GetRootSpan() Span {
	if o == nil {
		var ret Span
		return ret
	}

	return o.RootSpan
}

// GetRootSpanOk returns a tuple with the RootSpan field value
// and a boolean to check if the value has been set.
func (o *FullTrace) GetRootSpanOk() (*Span, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootSpan, true
}

// SetRootSpan sets field value
func (o *FullTrace) SetRootSpan(v Span) {
	o.RootSpan = v
}

func (o FullTrace) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.TotalErrorCount != nil {
		toSerialize["totalErrorCount"] = o.TotalErrorCount
	}
	if true {
		toSerialize["rootSpan"] = o.RootSpan
	}
	return json.Marshal(toSerialize)
}

type NullableFullTrace struct {
	value *FullTrace
	isSet bool
}

func (v NullableFullTrace) Get() *FullTrace {
	return v.value
}

func (v *NullableFullTrace) Set(val *FullTrace) {
	v.value = val
	v.isSet = true
}

func (v NullableFullTrace) IsSet() bool {
	return v.isSet
}

func (v *NullableFullTrace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullTrace(val *FullTrace) *NullableFullTrace {
	return &NullableFullTrace{value: val, isSet: true}
}

func (v NullableFullTrace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullTrace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
