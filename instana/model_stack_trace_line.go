/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// StackTraceLine struct for StackTraceLine
type StackTraceLine struct {
	File                   string  `json:"file"`
	Name                   *string `json:"name,omitempty"`
	Line                   *int32  `json:"line,omitempty"`
	Column                 *int32  `json:"column,omitempty"`
	TranslationStatus      *int32  `json:"translationStatus,omitempty"`
	TranslationExplanation *string `json:"translationExplanation,omitempty"`
}

// NewStackTraceLine instantiates a new StackTraceLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackTraceLine(file string) *StackTraceLine {
	this := StackTraceLine{}
	this.File = file
	return &this
}

// NewStackTraceLineWithDefaults instantiates a new StackTraceLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackTraceLineWithDefaults() *StackTraceLine {
	this := StackTraceLine{}
	return &this
}

// GetFile returns the File field value
func (o *StackTraceLine) GetFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *StackTraceLine) GetFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *StackTraceLine) SetFile(v string) {
	o.File = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StackTraceLine) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceLine) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StackTraceLine) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StackTraceLine) SetName(v string) {
	o.Name = &v
}

// GetLine returns the Line field value if set, zero value otherwise.
func (o *StackTraceLine) GetLine() int32 {
	if o == nil || o.Line == nil {
		var ret int32
		return ret
	}
	return *o.Line
}

// GetLineOk returns a tuple with the Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceLine) GetLineOk() (*int32, bool) {
	if o == nil || o.Line == nil {
		return nil, false
	}
	return o.Line, true
}

// HasLine returns a boolean if a field has been set.
func (o *StackTraceLine) HasLine() bool {
	if o != nil && o.Line != nil {
		return true
	}

	return false
}

// SetLine gets a reference to the given int32 and assigns it to the Line field.
func (o *StackTraceLine) SetLine(v int32) {
	o.Line = &v
}

// GetColumn returns the Column field value if set, zero value otherwise.
func (o *StackTraceLine) GetColumn() int32 {
	if o == nil || o.Column == nil {
		var ret int32
		return ret
	}
	return *o.Column
}

// GetColumnOk returns a tuple with the Column field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceLine) GetColumnOk() (*int32, bool) {
	if o == nil || o.Column == nil {
		return nil, false
	}
	return o.Column, true
}

// HasColumn returns a boolean if a field has been set.
func (o *StackTraceLine) HasColumn() bool {
	if o != nil && o.Column != nil {
		return true
	}

	return false
}

// SetColumn gets a reference to the given int32 and assigns it to the Column field.
func (o *StackTraceLine) SetColumn(v int32) {
	o.Column = &v
}

// GetTranslationStatus returns the TranslationStatus field value if set, zero value otherwise.
func (o *StackTraceLine) GetTranslationStatus() int32 {
	if o == nil || o.TranslationStatus == nil {
		var ret int32
		return ret
	}
	return *o.TranslationStatus
}

// GetTranslationStatusOk returns a tuple with the TranslationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceLine) GetTranslationStatusOk() (*int32, bool) {
	if o == nil || o.TranslationStatus == nil {
		return nil, false
	}
	return o.TranslationStatus, true
}

// HasTranslationStatus returns a boolean if a field has been set.
func (o *StackTraceLine) HasTranslationStatus() bool {
	if o != nil && o.TranslationStatus != nil {
		return true
	}

	return false
}

// SetTranslationStatus gets a reference to the given int32 and assigns it to the TranslationStatus field.
func (o *StackTraceLine) SetTranslationStatus(v int32) {
	o.TranslationStatus = &v
}

// GetTranslationExplanation returns the TranslationExplanation field value if set, zero value otherwise.
func (o *StackTraceLine) GetTranslationExplanation() string {
	if o == nil || o.TranslationExplanation == nil {
		var ret string
		return ret
	}
	return *o.TranslationExplanation
}

// GetTranslationExplanationOk returns a tuple with the TranslationExplanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTraceLine) GetTranslationExplanationOk() (*string, bool) {
	if o == nil || o.TranslationExplanation == nil {
		return nil, false
	}
	return o.TranslationExplanation, true
}

// HasTranslationExplanation returns a boolean if a field has been set.
func (o *StackTraceLine) HasTranslationExplanation() bool {
	if o != nil && o.TranslationExplanation != nil {
		return true
	}

	return false
}

// SetTranslationExplanation gets a reference to the given string and assigns it to the TranslationExplanation field.
func (o *StackTraceLine) SetTranslationExplanation(v string) {
	o.TranslationExplanation = &v
}

func (o StackTraceLine) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["file"] = o.File
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Line != nil {
		toSerialize["line"] = o.Line
	}
	if o.Column != nil {
		toSerialize["column"] = o.Column
	}
	if o.TranslationStatus != nil {
		toSerialize["translationStatus"] = o.TranslationStatus
	}
	if o.TranslationExplanation != nil {
		toSerialize["translationExplanation"] = o.TranslationExplanation
	}
	return json.Marshal(toSerialize)
}

type NullableStackTraceLine struct {
	value *StackTraceLine
	isSet bool
}

func (v NullableStackTraceLine) Get() *StackTraceLine {
	return v.value
}

func (v *NullableStackTraceLine) Set(val *StackTraceLine) {
	v.value = val
	v.isSet = true
}

func (v NullableStackTraceLine) IsSet() bool {
	return v.isSet
}

func (v *NullableStackTraceLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackTraceLine(val *StackTraceLine) *NullableStackTraceLine {
	return &NullableStackTraceLine{value: val, isSet: true}
}

func (v NullableStackTraceLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackTraceLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
