/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// SliReport struct for SliReport
type SliReport struct {
	Sli                   *float64          `json:"sli,omitempty"`
	Slo                   *float64          `json:"slo,omitempty"`
	TotalErrorBudget      *int32            `json:"totalErrorBudget,omitempty"`
	ErrorBudgetRemaining  *int32            `json:"errorBudgetRemaining,omitempty"`
	FromTimestamp         *int64            `json:"fromTimestamp,omitempty"`
	ToTimestamp           *int64            `json:"toTimestamp,omitempty"`
	ViolationDistribution *map[string]int32 `json:"violationDistribution,omitempty"`
}

// NewSliReport instantiates a new SliReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSliReport() *SliReport {
	this := SliReport{}
	return &this
}

// NewSliReportWithDefaults instantiates a new SliReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSliReportWithDefaults() *SliReport {
	this := SliReport{}
	return &this
}

// GetSli returns the Sli field value if set, zero value otherwise.
func (o *SliReport) GetSli() float64 {
	if o == nil || o.Sli == nil {
		var ret float64
		return ret
	}
	return *o.Sli
}

// GetSliOk returns a tuple with the Sli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliReport) GetSliOk() (*float64, bool) {
	if o == nil || o.Sli == nil {
		return nil, false
	}
	return o.Sli, true
}

// HasSli returns a boolean if a field has been set.
func (o *SliReport) HasSli() bool {
	if o != nil && o.Sli != nil {
		return true
	}

	return false
}

// SetSli gets a reference to the given float64 and assigns it to the Sli field.
func (o *SliReport) SetSli(v float64) {
	o.Sli = &v
}

// GetSlo returns the Slo field value if set, zero value otherwise.
func (o *SliReport) GetSlo() float64 {
	if o == nil || o.Slo == nil {
		var ret float64
		return ret
	}
	return *o.Slo
}

// GetSloOk returns a tuple with the Slo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliReport) GetSloOk() (*float64, bool) {
	if o == nil || o.Slo == nil {
		return nil, false
	}
	return o.Slo, true
}

// HasSlo returns a boolean if a field has been set.
func (o *SliReport) HasSlo() bool {
	if o != nil && o.Slo != nil {
		return true
	}

	return false
}

// SetSlo gets a reference to the given float64 and assigns it to the Slo field.
func (o *SliReport) SetSlo(v float64) {
	o.Slo = &v
}

// GetTotalErrorBudget returns the TotalErrorBudget field value if set, zero value otherwise.
func (o *SliReport) GetTotalErrorBudget() int32 {
	if o == nil || o.TotalErrorBudget == nil {
		var ret int32
		return ret
	}
	return *o.TotalErrorBudget
}

// GetTotalErrorBudgetOk returns a tuple with the TotalErrorBudget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliReport) GetTotalErrorBudgetOk() (*int32, bool) {
	if o == nil || o.TotalErrorBudget == nil {
		return nil, false
	}
	return o.TotalErrorBudget, true
}

// HasTotalErrorBudget returns a boolean if a field has been set.
func (o *SliReport) HasTotalErrorBudget() bool {
	if o != nil && o.TotalErrorBudget != nil {
		return true
	}

	return false
}

// SetTotalErrorBudget gets a reference to the given int32 and assigns it to the TotalErrorBudget field.
func (o *SliReport) SetTotalErrorBudget(v int32) {
	o.TotalErrorBudget = &v
}

// GetErrorBudgetRemaining returns the ErrorBudgetRemaining field value if set, zero value otherwise.
func (o *SliReport) GetErrorBudgetRemaining() int32 {
	if o == nil || o.ErrorBudgetRemaining == nil {
		var ret int32
		return ret
	}
	return *o.ErrorBudgetRemaining
}

// GetErrorBudgetRemainingOk returns a tuple with the ErrorBudgetRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliReport) GetErrorBudgetRemainingOk() (*int32, bool) {
	if o == nil || o.ErrorBudgetRemaining == nil {
		return nil, false
	}
	return o.ErrorBudgetRemaining, true
}

// HasErrorBudgetRemaining returns a boolean if a field has been set.
func (o *SliReport) HasErrorBudgetRemaining() bool {
	if o != nil && o.ErrorBudgetRemaining != nil {
		return true
	}

	return false
}

// SetErrorBudgetRemaining gets a reference to the given int32 and assigns it to the ErrorBudgetRemaining field.
func (o *SliReport) SetErrorBudgetRemaining(v int32) {
	o.ErrorBudgetRemaining = &v
}

// GetFromTimestamp returns the FromTimestamp field value if set, zero value otherwise.
func (o *SliReport) GetFromTimestamp() int64 {
	if o == nil || o.FromTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.FromTimestamp
}

// GetFromTimestampOk returns a tuple with the FromTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliReport) GetFromTimestampOk() (*int64, bool) {
	if o == nil || o.FromTimestamp == nil {
		return nil, false
	}
	return o.FromTimestamp, true
}

// HasFromTimestamp returns a boolean if a field has been set.
func (o *SliReport) HasFromTimestamp() bool {
	if o != nil && o.FromTimestamp != nil {
		return true
	}

	return false
}

// SetFromTimestamp gets a reference to the given int64 and assigns it to the FromTimestamp field.
func (o *SliReport) SetFromTimestamp(v int64) {
	o.FromTimestamp = &v
}

// GetToTimestamp returns the ToTimestamp field value if set, zero value otherwise.
func (o *SliReport) GetToTimestamp() int64 {
	if o == nil || o.ToTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.ToTimestamp
}

// GetToTimestampOk returns a tuple with the ToTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliReport) GetToTimestampOk() (*int64, bool) {
	if o == nil || o.ToTimestamp == nil {
		return nil, false
	}
	return o.ToTimestamp, true
}

// HasToTimestamp returns a boolean if a field has been set.
func (o *SliReport) HasToTimestamp() bool {
	if o != nil && o.ToTimestamp != nil {
		return true
	}

	return false
}

// SetToTimestamp gets a reference to the given int64 and assigns it to the ToTimestamp field.
func (o *SliReport) SetToTimestamp(v int64) {
	o.ToTimestamp = &v
}

// GetViolationDistribution returns the ViolationDistribution field value if set, zero value otherwise.
func (o *SliReport) GetViolationDistribution() map[string]int32 {
	if o == nil || o.ViolationDistribution == nil {
		var ret map[string]int32
		return ret
	}
	return *o.ViolationDistribution
}

// GetViolationDistributionOk returns a tuple with the ViolationDistribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliReport) GetViolationDistributionOk() (*map[string]int32, bool) {
	if o == nil || o.ViolationDistribution == nil {
		return nil, false
	}
	return o.ViolationDistribution, true
}

// HasViolationDistribution returns a boolean if a field has been set.
func (o *SliReport) HasViolationDistribution() bool {
	if o != nil && o.ViolationDistribution != nil {
		return true
	}

	return false
}

// SetViolationDistribution gets a reference to the given map[string]int32 and assigns it to the ViolationDistribution field.
func (o *SliReport) SetViolationDistribution(v map[string]int32) {
	o.ViolationDistribution = &v
}

func (o SliReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sli != nil {
		toSerialize["sli"] = o.Sli
	}
	if o.Slo != nil {
		toSerialize["slo"] = o.Slo
	}
	if o.TotalErrorBudget != nil {
		toSerialize["totalErrorBudget"] = o.TotalErrorBudget
	}
	if o.ErrorBudgetRemaining != nil {
		toSerialize["errorBudgetRemaining"] = o.ErrorBudgetRemaining
	}
	if o.FromTimestamp != nil {
		toSerialize["fromTimestamp"] = o.FromTimestamp
	}
	if o.ToTimestamp != nil {
		toSerialize["toTimestamp"] = o.ToTimestamp
	}
	if o.ViolationDistribution != nil {
		toSerialize["violationDistribution"] = o.ViolationDistribution
	}
	return json.Marshal(toSerialize)
}

type NullableSliReport struct {
	value *SliReport
	isSet bool
}

func (v NullableSliReport) Get() *SliReport {
	return v.value
}

func (v *NullableSliReport) Set(val *SliReport) {
	v.value = val
	v.isSet = true
}

func (v NullableSliReport) IsSet() bool {
	return v.isSet
}

func (v *NullableSliReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSliReport(val *SliReport) *NullableSliReport {
	return &NullableSliReport{value: val, isSet: true}
}

func (v NullableSliReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSliReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
