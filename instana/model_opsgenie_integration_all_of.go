/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// OpsgenieIntegrationAllOf struct for OpsgenieIntegrationAllOf
type OpsgenieIntegrationAllOf struct {
	ApiKey *string `json:"apiKey,omitempty"`
	Tags   *string `json:"tags,omitempty"`
	Region *string `json:"region,omitempty"`
	Alias  *string `json:"alias,omitempty"`
}

// NewOpsgenieIntegrationAllOf instantiates a new OpsgenieIntegrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsgenieIntegrationAllOf() *OpsgenieIntegrationAllOf {
	this := OpsgenieIntegrationAllOf{}
	return &this
}

// NewOpsgenieIntegrationAllOfWithDefaults instantiates a new OpsgenieIntegrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsgenieIntegrationAllOfWithDefaults() *OpsgenieIntegrationAllOf {
	this := OpsgenieIntegrationAllOf{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *OpsgenieIntegrationAllOf) GetApiKey() string {
	if o == nil || o.ApiKey == nil {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsgenieIntegrationAllOf) GetApiKeyOk() (*string, bool) {
	if o == nil || o.ApiKey == nil {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *OpsgenieIntegrationAllOf) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *OpsgenieIntegrationAllOf) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OpsgenieIntegrationAllOf) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsgenieIntegrationAllOf) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OpsgenieIntegrationAllOf) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *OpsgenieIntegrationAllOf) SetTags(v string) {
	o.Tags = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *OpsgenieIntegrationAllOf) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsgenieIntegrationAllOf) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *OpsgenieIntegrationAllOf) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *OpsgenieIntegrationAllOf) SetRegion(v string) {
	o.Region = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *OpsgenieIntegrationAllOf) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsgenieIntegrationAllOf) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *OpsgenieIntegrationAllOf) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *OpsgenieIntegrationAllOf) SetAlias(v string) {
	o.Alias = &v
}

func (o OpsgenieIntegrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKey != nil {
		toSerialize["apiKey"] = o.ApiKey
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	return json.Marshal(toSerialize)
}

type NullableOpsgenieIntegrationAllOf struct {
	value *OpsgenieIntegrationAllOf
	isSet bool
}

func (v NullableOpsgenieIntegrationAllOf) Get() *OpsgenieIntegrationAllOf {
	return v.value
}

func (v *NullableOpsgenieIntegrationAllOf) Set(val *OpsgenieIntegrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsgenieIntegrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsgenieIntegrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsgenieIntegrationAllOf(val *OpsgenieIntegrationAllOf) *NullableOpsgenieIntegrationAllOf {
	return &NullableOpsgenieIntegrationAllOf{value: val, isSet: true}
}

func (v NullableOpsgenieIntegrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsgenieIntegrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
