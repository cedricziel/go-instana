/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// EmailIntegrationAllOf struct for EmailIntegrationAllOf
type EmailIntegrationAllOf struct {
	Emails *[]string `json:"emails,omitempty"`
}

// NewEmailIntegrationAllOf instantiates a new EmailIntegrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailIntegrationAllOf() *EmailIntegrationAllOf {
	this := EmailIntegrationAllOf{}
	return &this
}

// NewEmailIntegrationAllOfWithDefaults instantiates a new EmailIntegrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailIntegrationAllOfWithDefaults() *EmailIntegrationAllOf {
	this := EmailIntegrationAllOf{}
	return &this
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *EmailIntegrationAllOf) GetEmails() []string {
	if o == nil || o.Emails == nil {
		var ret []string
		return ret
	}
	return *o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailIntegrationAllOf) GetEmailsOk() (*[]string, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *EmailIntegrationAllOf) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []string and assigns it to the Emails field.
func (o *EmailIntegrationAllOf) SetEmails(v []string) {
	o.Emails = &v
}

func (o EmailIntegrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	return json.Marshal(toSerialize)
}

type NullableEmailIntegrationAllOf struct {
	value *EmailIntegrationAllOf
	isSet bool
}

func (v NullableEmailIntegrationAllOf) Get() *EmailIntegrationAllOf {
	return v.value
}

func (v *NullableEmailIntegrationAllOf) Set(val *EmailIntegrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailIntegrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailIntegrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailIntegrationAllOf(val *EmailIntegrationAllOf) *NullableEmailIntegrationAllOf {
	return &NullableEmailIntegrationAllOf{value: val, isSet: true}
}

func (v NullableEmailIntegrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailIntegrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
