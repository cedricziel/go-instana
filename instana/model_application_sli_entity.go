/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// ApplicationSliEntity struct for ApplicationSliEntity
type ApplicationSliEntity struct {
	SliEntity
	ApplicationId *string `json:"applicationId,omitempty"`
	ServiceId     *string `json:"serviceId,omitempty"`
	EndpointId    *string `json:"endpointId,omitempty"`
	BoundaryScope string  `json:"boundaryScope"`
}

// NewApplicationSliEntity instantiates a new ApplicationSliEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSliEntity(boundaryScope string) *ApplicationSliEntity {
	this := ApplicationSliEntity{}
	this.BoundaryScope = boundaryScope
	return &this
}

// NewApplicationSliEntityWithDefaults instantiates a new ApplicationSliEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSliEntityWithDefaults() *ApplicationSliEntity {
	this := ApplicationSliEntity{}
	return &this
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *ApplicationSliEntity) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSliEntity) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *ApplicationSliEntity) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *ApplicationSliEntity) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ApplicationSliEntity) GetServiceId() string {
	if o == nil || o.ServiceId == nil {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSliEntity) GetServiceIdOk() (*string, bool) {
	if o == nil || o.ServiceId == nil {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ApplicationSliEntity) HasServiceId() bool {
	if o != nil && o.ServiceId != nil {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *ApplicationSliEntity) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *ApplicationSliEntity) GetEndpointId() string {
	if o == nil || o.EndpointId == nil {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSliEntity) GetEndpointIdOk() (*string, bool) {
	if o == nil || o.EndpointId == nil {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *ApplicationSliEntity) HasEndpointId() bool {
	if o != nil && o.EndpointId != nil {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *ApplicationSliEntity) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetBoundaryScope returns the BoundaryScope field value
func (o *ApplicationSliEntity) GetBoundaryScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BoundaryScope
}

// GetBoundaryScopeOk returns a tuple with the BoundaryScope field value
// and a boolean to check if the value has been set.
func (o *ApplicationSliEntity) GetBoundaryScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BoundaryScope, true
}

// SetBoundaryScope sets field value
func (o *ApplicationSliEntity) SetBoundaryScope(v string) {
	o.BoundaryScope = v
}

func (o ApplicationSliEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedSliEntity, errSliEntity := json.Marshal(o.SliEntity)
	if errSliEntity != nil {
		return []byte{}, errSliEntity
	}
	errSliEntity = json.Unmarshal([]byte(serializedSliEntity), &toSerialize)
	if errSliEntity != nil {
		return []byte{}, errSliEntity
	}
	if o.ApplicationId != nil {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.ServiceId != nil {
		toSerialize["serviceId"] = o.ServiceId
	}
	if o.EndpointId != nil {
		toSerialize["endpointId"] = o.EndpointId
	}
	if true {
		toSerialize["boundaryScope"] = o.BoundaryScope
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationSliEntity struct {
	value *ApplicationSliEntity
	isSet bool
}

func (v NullableApplicationSliEntity) Get() *ApplicationSliEntity {
	return v.value
}

func (v *NullableApplicationSliEntity) Set(val *ApplicationSliEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSliEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSliEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSliEntity(val *ApplicationSliEntity) *NullableApplicationSliEntity {
	return &NullableApplicationSliEntity{value: val, isSet: true}
}

func (v NullableApplicationSliEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSliEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
