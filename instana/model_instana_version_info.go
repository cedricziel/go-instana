/*
 * Introduction to Instana public APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.192.86
 * Contact: support@instana.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package instana

import (
	"encoding/json"
)

// InstanaVersionInfo struct for InstanaVersionInfo
type InstanaVersionInfo struct {
	Branch   *string `json:"branch,omitempty"`
	Commit   *string `json:"commit,omitempty"`
	ImageTag *string `json:"imageTag,omitempty"`
}

// NewInstanaVersionInfo instantiates a new InstanaVersionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanaVersionInfo() *InstanaVersionInfo {
	this := InstanaVersionInfo{}
	return &this
}

// NewInstanaVersionInfoWithDefaults instantiates a new InstanaVersionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanaVersionInfoWithDefaults() *InstanaVersionInfo {
	this := InstanaVersionInfo{}
	return &this
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *InstanaVersionInfo) GetBranch() string {
	if o == nil || o.Branch == nil {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanaVersionInfo) GetBranchOk() (*string, bool) {
	if o == nil || o.Branch == nil {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *InstanaVersionInfo) HasBranch() bool {
	if o != nil && o.Branch != nil {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *InstanaVersionInfo) SetBranch(v string) {
	o.Branch = &v
}

// GetCommit returns the Commit field value if set, zero value otherwise.
func (o *InstanaVersionInfo) GetCommit() string {
	if o == nil || o.Commit == nil {
		var ret string
		return ret
	}
	return *o.Commit
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanaVersionInfo) GetCommitOk() (*string, bool) {
	if o == nil || o.Commit == nil {
		return nil, false
	}
	return o.Commit, true
}

// HasCommit returns a boolean if a field has been set.
func (o *InstanaVersionInfo) HasCommit() bool {
	if o != nil && o.Commit != nil {
		return true
	}

	return false
}

// SetCommit gets a reference to the given string and assigns it to the Commit field.
func (o *InstanaVersionInfo) SetCommit(v string) {
	o.Commit = &v
}

// GetImageTag returns the ImageTag field value if set, zero value otherwise.
func (o *InstanaVersionInfo) GetImageTag() string {
	if o == nil || o.ImageTag == nil {
		var ret string
		return ret
	}
	return *o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanaVersionInfo) GetImageTagOk() (*string, bool) {
	if o == nil || o.ImageTag == nil {
		return nil, false
	}
	return o.ImageTag, true
}

// HasImageTag returns a boolean if a field has been set.
func (o *InstanaVersionInfo) HasImageTag() bool {
	if o != nil && o.ImageTag != nil {
		return true
	}

	return false
}

// SetImageTag gets a reference to the given string and assigns it to the ImageTag field.
func (o *InstanaVersionInfo) SetImageTag(v string) {
	o.ImageTag = &v
}

func (o InstanaVersionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Branch != nil {
		toSerialize["branch"] = o.Branch
	}
	if o.Commit != nil {
		toSerialize["commit"] = o.Commit
	}
	if o.ImageTag != nil {
		toSerialize["imageTag"] = o.ImageTag
	}
	return json.Marshal(toSerialize)
}

type NullableInstanaVersionInfo struct {
	value *InstanaVersionInfo
	isSet bool
}

func (v NullableInstanaVersionInfo) Get() *InstanaVersionInfo {
	return v.value
}

func (v *NullableInstanaVersionInfo) Set(val *InstanaVersionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanaVersionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanaVersionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanaVersionInfo(val *InstanaVersionInfo) *NullableInstanaVersionInfo {
	return &NullableInstanaVersionInfo{value: val, isSet: true}
}

func (v NullableInstanaVersionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanaVersionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
